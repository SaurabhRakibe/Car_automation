

HI-TECH Software PIC LITE Macro Assembler V9.71a build 6446 
                                                                                               Wed Jan 01 00:25:36 2003

HI-TECH Software Omniscient Code Generator (Lite mode) build 6446
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 6446"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_inithw
    43                           	FNCALL	_main,_initlcd
    44                           	FNCALL	_main,_initvar
    45                           	FNCALL	_main,_dispstr
    46                           	FNCALL	_main,_LCD_Cursor
    47                           	FNCALL	_main,_channel_Sel
    48                           	FNCALL	_main,___lmul
    49                           	FNCALL	_main,_dispnum
    50                           	FNCALL	_main,_delay
    51                           	FNCALL	_dispnum,___lwmod
    52                           	FNCALL	_dispnum,___lwdiv
    53                           	FNCALL	_dispnum,_display
    54                           	FNCALL	_dispstr,_display
    55                           	FNCALL	_LCD_Cursor,_write_lcd_command
    56                           	FNCALL	_display,_write_lcd_command
    57                           	FNCALL	_display,_write_lcd_data
    58                           	FNCALL	_display,_delay
    59                           	FNCALL	_initlcd,_write_lcd_command
    60                           	FNCALL	_initlcd,_delay
    61                           	FNCALL	_write_lcd_data,_send_nibble2lcd
    62                           	FNCALL	_write_lcd_command,_send_nibble2lcd
    63                           	FNCALL	_write_lcd_command,_delay
    64                           	FNCALL	_channel_Sel,_delay
    65                           	FNCALL	_send_nibble2lcd,_delay
    66                           	FNROOT	_main
    67                           	FNCALL	intlevel1,_isr
    68                           	global	intlevel1
    69                           	FNROOT	intlevel1
    70                           	global	_str
    71                           	global	_Temp1
    72                           	global	_Temp2
    73                           	global	_Temp3
    74                           	global	_adcval
    75                           	global	_cnt1
    76                           	global	_cnt2
    77                           	global	_cnt3
    78                           	global	_delaycnt
    79                           	global	_milisec
    80                           	global	_wmax
    81                           	global	_wmin
    82                           	global	_Refresh
    83                           	global	_Second
    84                           	global	_TempZ
    85                           	global	_maxsign
    86                           	global	_minsign
    87                           	global	_scan
    88                           	global	_sign
    89                           	global	TEMPDEF@DataBuffer
    90                           	global	_DataBuffer
    91                           	global	_Rxcnt
    92                           	global	_Rxindex
    93                           	global	_kcnt
    94                           	global	_key
    95                           	global	_keyrel
    96                           	global	_RxFlag
    97                           	global	_adcflag
    98                           	global	_kflag
    99                           	global	_recBit
   100                           	global	TEMPDEF@str
   101                           	global	_lcd_dat
   102                           psect	nvBANK0,class=BANK0,space=1
   103                           global __pnvBANK0
   104  006B                     __pnvBANK0:
   105  006B                     _lcd_dat:
   106  006B                            ds      1
   107                           
   108                           	global	_ADCON0
   109  001F                     _ADCON0	set	31
   110                           	global	_ADRESH
   111  001E                     _ADRESH	set	30
   112                           	global	_INTCON
   113  000B                     _INTCON	set	11
   114                           	global	_PIR1
   115  000C                     _PIR1	set	12
   116                           	global	_RCREG
   117  001A                     _RCREG	set	26
   118                           	global	_T1CON
   119  0010                     _T1CON	set	16
   120                           	global	_TMR1H
   121  000F                     _TMR1H	set	15
   122                           	global	_TMR1L
   123  000E                     _TMR1L	set	14
   124                           	global	_ADGO
   125  00FA                     _ADGO	set	250
   126                           	global	_ADIF
   127  0066                     _ADIF	set	102
   128                           	global	_CREN
   129  00C4                     _CREN	set	196
   130                           	global	_GIE
   131  005F                     _GIE	set	95
   132                           	global	_PEIE
   133  005E                     _PEIE	set	94
   134                           	global	_RB1
   135  0031                     _RB1	set	49
   136                           	global	_RB2
   137  0032                     _RB2	set	50
   138                           	global	_RB4
   139  0034                     _RB4	set	52
   140                           	global	_RB5
   141  0035                     _RB5	set	53
   142                           	global	_RB6
   143  0036                     _RB6	set	54
   144                           	global	_RB7
   145  0037                     _RB7	set	55
   146                           	global	_RC0
   147  0038                     _RC0	set	56
   148                           	global	_RC1
   149  0039                     _RC1	set	57
   150                           	global	_RC2
   151  003A                     _RC2	set	58
   152                           	global	_RC3
   153  003B                     _RC3	set	59
   154                           	global	_RCIF
   155  0065                     _RCIF	set	101
   156                           	global	_RD0
   157  0040                     _RD0	set	64
   158                           	global	_RD7
   159  0047                     _RD7	set	71
   160                           	global	_RX9
   161  00C6                     _RX9	set	198
   162                           	global	_SPEN
   163  00C7                     _SPEN	set	199
   164                           	global	_TMR1IF
   165  0060                     _TMR1IF	set	96
   166                           	global	_ADCON1
   167  009F                     _ADCON1	set	159
   168                           	global	_ADRESL
   169  009E                     _ADRESL	set	158
   170                           	global	_OPTION
   171  0081                     _OPTION	set	129
   172                           	global	_SPBRG
   173  0099                     _SPBRG	set	153
   174                           	global	_TRISA
   175  0085                     _TRISA	set	133
   176                           	global	_TRISB
   177  0086                     _TRISB	set	134
   178                           	global	_TRISC
   179  0087                     _TRISC	set	135
   180                           	global	_TRISD
   181  0088                     _TRISD	set	136
   182                           	global	_TRISE
   183  0089                     _TRISE	set	137
   184                           	global	_BRGH
   185  04C2                     _BRGH	set	1218
   186                           	global	_RBPU
   187  040F                     _RBPU	set	1039
   188                           	global	_RCIE
   189  0465                     _RCIE	set	1125
   190                           	global	_SYNC
   191  04C4                     _SYNC	set	1220
   192                           	global	_TMR1IE
   193  0460                     _TMR1IE	set	1120
   194                           	global	_TX9
   195  04C6                     _TX9	set	1222
   196                           	global	_TXEN
   197  04C5                     _TXEN	set	1221
   198                           	global	_TXIE
   199  0464                     _TXIE	set	1124
   200                           psect	strings,class=STRING,delta=2
   201                           global __pstrings
   202  0013                     __pstrings:
   203                           ;	global	stringdir,stringtab,__stringbase
   204  0013                     stringtab:
   205                           ;	String table - string pointers are 1 byte each
   206  0013                     stringcode:stringdir:
      + 0013                     stringdir:	
   207  0013  3000               movlw high(stringdir)
   208  0014  008A               movwf pclath
   209  0015  0804               movf fsr,w
   210  0016  0A84               incf fsr
   211  0017  0782               	addwf pc
   212  0018                     __stringbase:
   213  0018  3400               	retlw	0
   214                           psect	strings
   215                           	
   216  0019                     STR_2:	
   217  0019  3454               	retlw	84	;'T'
   218  001A  3465               	retlw	101	;'e'
   219  001B  346D               	retlw	109	;'m'
   220  001C  3470               	retlw	112	;'p'
   221  001D  3420               	retlw	32	;' '
   222  001E  343A               	retlw	58	;':'
   223  001F  3420               	retlw	32	;' '
   224  0020  3420               	retlw	32	;' '
   225  0021  3420               	retlw	32	;' '
   226  0022  3420               	retlw	32	;' '
   227  0023  3420               	retlw	32	;' '
   228  0024  3420               	retlw	32	;' '
   229  0025  3420               	retlw	32	;' '
   230  0026  3420               	retlw	32	;' '
   231  0027  3420               	retlw	32	;' '
   232  0028  3420               	retlw	32	;' '
   233  0029  3420               	retlw	32	;' '
   234  002A  3420               	retlw	32	;' '
   235  002B  3400               	retlw	0
   236                           psect	strings
   237                           	
   238  002C                     STR_1:	
   239  002C  3457               	retlw	87	;'W'
   240  002D  3445               	retlw	69	;'E'
   241  002E  344C               	retlw	76	;'L'
   242  002F  3443               	retlw	67	;'C'
   243  0030  344F               	retlw	79	;'O'
   244  0031  344D               	retlw	77	;'M'
   245  0032  3445               	retlw	69	;'E'
   246  0033  3420               	retlw	32	;' '
   247  0034  3420               	retlw	32	;' '
   248  0035  3420               	retlw	32	;' '
   249  0036  3420               	retlw	32	;' '
   250  0037  3420               	retlw	32	;' '
   251  0038  3420               	retlw	32	;' '
   252  0039  3420               	retlw	32	;' '
   253  003A  3420               	retlw	32	;' '
   254  003B  3420               	retlw	32	;' '
   255  003C  3400               	retlw	0
   256                           psect	strings
   257                           	file	"lcduart.as"
   258                           	line	#
   259                           psect cinit,class=CODE,delta=2
   260                           global start_initialization
   261  052F                     start_initialization:
   262                           
   263                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   264                           global __pbitbssCOMMON
   265  03D8                     __pbitbssCOMMON:
   266  03D8                     _RxFlag:
   267  03D8                            ds      1
   268                           
   269  03D9                     _adcflag:
   270  03D9                            ds      1
   271                           
   272  03DA                     _kflag:
   273  03DA                            ds      1
   274                           
   275  03DB                     _recBit:
   276  03DB                            ds      1
   277                           
   278                           psect	bssCOMMON,class=COMMON,space=1
   279                           global __pbssCOMMON
   280  0076                     __pbssCOMMON:
   281  0076                     _Rxcnt:
   282  0076                            ds      1
   283                           
   284  0077                     _Rxindex:
   285  0077                            ds      1
   286                           
   287  0078                     _kcnt:
   288  0078                            ds      1
   289                           
   290  0079                     _key:
   291  0079                            ds      1
   292                           
   293  007A                     _keyrel:
   294  007A                            ds      1
   295                           
   296                           psect	bssBANK0,class=BANK0,space=1
   297                           global __pbssBANK0
   298  0020                     __pbssBANK0:
   299  0020                     _str:
   300  0020                            ds      16
   301                           
   302  0030                     _Temp1:
   303  0030                            ds      4
   304                           
   305  0034                     _Temp2:
   306  0034                            ds      4
   307                           
   308  0038                     _Temp3:
   309  0038                            ds      4
   310                           
   311  003C                     _adcval:
   312  003C                            ds      2
   313                           
   314  003E                     _cnt1:
   315  003E                            ds      2
   316                           
   317  0040                     _cnt2:
   318  0040                            ds      2
   319                           
   320  0042                     _cnt3:
   321  0042                            ds      2
   322                           
   323  0044                     _delaycnt:
   324  0044                            ds      2
   325                           
   326  0046                     _milisec:
   327  0046                            ds      2
   328                           
   329  0048                     _wmax:
   330  0048                            ds      2
   331                           
   332  004A                     _wmin:
   333  004A                            ds      2
   334                           
   335  004C                     _Refresh:
   336  004C                            ds      1
   337                           
   338  004D                     _Second:
   339  004D                            ds      1
   340                           
   341  004E                     _TempZ:
   342  004E                            ds      1
   343                           
   344  004F                     _maxsign:
   345  004F                            ds      1
   346                           
   347  0050                     _minsign:
   348  0050                            ds      1
   349                           
   350  0051                     _scan:
   351  0051                            ds      1
   352                           
   353  0052                     _sign:
   354  0052                            ds      1
   355                           
   356                           psect	bssBANK1,class=BANK1,space=1
   357                           global __pbssBANK1
   358  00A0                     __pbssBANK1:
   359  00A0                     TEMPDEF@str:
   360  00A0                            ds      16
   361                           
   362                           psect	bssBANK3,class=BANK3,space=1
   363                           global __pbssBANK3
   364  0190                     __pbssBANK3:
   365  0190                     _DataBuffer:
   366  0190                            ds      75
   367                           
   368                           psect	bssBANK2,class=BANK2,space=1
   369                           global __pbssBANK2
   370  0110                     __pbssBANK2:
   371  0110                     TEMPDEF@DataBuffer:
   372  0110                            ds      75
   373                           
   374                           psect clrtext,class=CODE,delta=2
   375                           global clear_ram
   376                           ;	Called with FSR containing the base address, and
   377                           ;	W with the last address+1
   378  05E6                     clear_ram:
   379  05E6  0064               	clrwdt			;clear the watchdog before getting into this loop
   380  05E7                     clrloop:
   381  05E7  0180               	clrf	indf		;clear RAM location pointed to by FSR
   382  05E8  0A84               	incf	fsr,f		;increment pointer
   383  05E9  0604               	xorwf	fsr,w		;XOR with final address
   384  05EA  1903               	btfsc	status,2	;have we reached the end yet?
   385  05EB  3400               	retlw	0		;all done for this memory range, return
   386  05EC  0604               	xorwf	fsr,w		;XOR again to restore value
   387  05ED  2DE7               	goto	clrloop		;do the next byte
   388                           
   389                           ; Clear objects allocated to BITCOMMON
   390                           psect cinit,class=CODE,delta=2
   391  052F  01FB               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   392                           ; Clear objects allocated to COMMON
   393                           psect cinit,class=CODE,delta=2
   394  0530  01F6               	clrf	((__pbssCOMMON)+0)&07Fh
   395  0531  01F7               	clrf	((__pbssCOMMON)+1)&07Fh
   396  0532  01F8               	clrf	((__pbssCOMMON)+2)&07Fh
   397  0533  01F9               	clrf	((__pbssCOMMON)+3)&07Fh
   398  0534  01FA               	clrf	((__pbssCOMMON)+4)&07Fh
   399                           ; Clear objects allocated to BANK0
   400                           psect cinit,class=CODE,delta=2
   401  0535  1383               	bcf	status, 7	;select IRP bank0
   402  0536  3020               	movlw	low(__pbssBANK0)
   403  0537  0084               	movwf	fsr
   404  0538  3053               	movlw	low((__pbssBANK0)+033h)
   405  0539  120A  118A  25E6   	fcall	clear_ram
              120A  118A         
   406                           ; Clear objects allocated to BANK1
   407                           psect cinit,class=CODE,delta=2
   408  053E  30A0               	movlw	low(__pbssBANK1)
   409  053F  0084               	movwf	fsr
   410  0540  30B0               	movlw	low((__pbssBANK1)+010h)
   411  0541  120A  118A  25E6   	fcall	clear_ram
              120A  118A         
   412                           ; Clear objects allocated to BANK3
   413                           psect cinit,class=CODE,delta=2
   414  0546  1783               	bsf	status, 7	;select IRP bank2
   415  0547  3090               	movlw	low(__pbssBANK3)
   416  0548  0084               	movwf	fsr
   417  0549  30DB               	movlw	low((__pbssBANK3)+04Bh)
   418  054A  120A  118A  25E6   	fcall	clear_ram
              120A  118A         
   419                           ; Clear objects allocated to BANK2
   420                           psect cinit,class=CODE,delta=2
   421  054F  3010               	movlw	low(__pbssBANK2)
   422  0550  0084               	movwf	fsr
   423  0551  305B               	movlw	low((__pbssBANK2)+04Bh)
   424  0552  120A  118A  25E6   	fcall	clear_ram
              120A  118A         
   425                           psect cinit,class=CODE,delta=2
   426                           global end_of_initialization
   427                           
   428                           ;End of C runtime variable initialization code
   429                           
   430  0557                     end_of_initialization:
   431  0557  0183               clrf status
   432  0558  120A  118A  283D   ljmp _main	;jump to C main() function
   433                           psect	cstackCOMMON,class=COMMON,space=1
   434                           global __pcstackCOMMON
   435  0070                     __pcstackCOMMON:
   436                           	global	?_isr
   437  0070                     ?_isr:	; 0 bytes @ 0x0
   438                           	global	??_isr
   439  0070                     ??_isr:	; 0 bytes @ 0x0
   440                           	global	?_inithw
   441  0070                     ?_inithw:	; 0 bytes @ 0x0
   442                           	global	?_write_lcd_command
   443  0070                     ?_write_lcd_command:	; 0 bytes @ 0x0
   444                           	global	?_write_lcd_data
   445  0070                     ?_write_lcd_data:	; 0 bytes @ 0x0
   446                           	global	?_initlcd
   447  0070                     ?_initlcd:	; 0 bytes @ 0x0
   448                           	global	?_display
   449  0070                     ?_display:	; 0 bytes @ 0x0
   450                           	global	?_channel_Sel
   451  0070                     ?_channel_Sel:	; 0 bytes @ 0x0
   452                           	global	?_initvar
   453  0070                     ?_initvar:	; 0 bytes @ 0x0
   454                           	global	?_main
   455  0070                     ?_main:	; 0 bytes @ 0x0
   456  0070                     	ds	6
   457                           psect	cstackBANK0,class=BANK0,space=1
   458                           global __pcstackBANK0
   459  0053                     __pcstackBANK0:
   460                           	global	??_inithw
   461  0053                     ??_inithw:	; 0 bytes @ 0x0
   462                           	global	?_delay
   463  0053                     ?_delay:	; 0 bytes @ 0x0
   464                           	global	??_initvar
   465  0053                     ??_initvar:	; 0 bytes @ 0x0
   466                           	global	?___lwdiv
   467  0053                     ?___lwdiv:	; 2 bytes @ 0x0
   468                           	global	?___lwmod
   469  0053                     ?___lwmod:	; 2 bytes @ 0x0
   470                           	global	?___lmul
   471  0053                     ?___lmul:	; 4 bytes @ 0x0
   472                           	global	delay@num
   473  0053                     delay@num:	; 2 bytes @ 0x0
   474                           	global	___lwdiv@divisor
   475  0053                     ___lwdiv@divisor:	; 2 bytes @ 0x0
   476                           	global	___lwmod@divisor
   477  0053                     ___lwmod@divisor:	; 2 bytes @ 0x0
   478                           	global	___lmul@multiplier
   479  0053                     ___lmul@multiplier:	; 4 bytes @ 0x0
   480  0053                     	ds	2
   481                           	global	??_delay
   482  0055                     ??_delay:	; 0 bytes @ 0x2
   483                           	global	delay@time
   484  0055                     delay@time:	; 2 bytes @ 0x2
   485                           	global	___lwdiv@dividend
   486  0055                     ___lwdiv@dividend:	; 2 bytes @ 0x2
   487                           	global	___lwmod@dividend
   488  0055                     ___lwmod@dividend:	; 2 bytes @ 0x2
   489  0055                     	ds	2
   490                           	global	?_send_nibble2lcd
   491  0057                     ?_send_nibble2lcd:	; 0 bytes @ 0x4
   492                           	global	??_channel_Sel
   493  0057                     ??_channel_Sel:	; 0 bytes @ 0x4
   494                           	global	??___lwdiv
   495  0057                     ??___lwdiv:	; 0 bytes @ 0x4
   496                           	global	??___lwmod
   497  0057                     ??___lwmod:	; 0 bytes @ 0x4
   498                           	global	send_nibble2lcd@flag
   499  0057                     send_nibble2lcd@flag:	; 1 bytes @ 0x4
   500                           	global	channel_Sel@channel
   501  0057                     channel_Sel@channel:	; 1 bytes @ 0x4
   502                           	global	___lmul@multiplicand
   503  0057                     ___lmul@multiplicand:	; 4 bytes @ 0x4
   504  0057                     	ds	1
   505                           	global	??_send_nibble2lcd
   506  0058                     ??_send_nibble2lcd:	; 0 bytes @ 0x5
   507                           	global	send_nibble2lcd@PortData
   508  0058                     send_nibble2lcd@PortData:	; 1 bytes @ 0x5
   509                           	global	___lwdiv@counter
   510  0058                     ___lwdiv@counter:	; 1 bytes @ 0x5
   511                           	global	___lwmod@counter
   512  0058                     ___lwmod@counter:	; 1 bytes @ 0x5
   513  0058                     	ds	1
   514                           	global	??_write_lcd_command
   515  0059                     ??_write_lcd_command:	; 0 bytes @ 0x6
   516                           	global	??_write_lcd_data
   517  0059                     ??_write_lcd_data:	; 0 bytes @ 0x6
   518                           	global	___lwdiv@quotient
   519  0059                     ___lwdiv@quotient:	; 2 bytes @ 0x6
   520  0059                     	ds	1
   521                           	global	write_lcd_command@byte
   522  005A                     write_lcd_command@byte:	; 1 bytes @ 0x7
   523                           	global	write_lcd_data@byte
   524  005A                     write_lcd_data@byte:	; 1 bytes @ 0x7
   525  005A                     	ds	1
   526                           	global	??_initlcd
   527  005B                     ??_initlcd:	; 0 bytes @ 0x8
   528                           	global	??_display
   529  005B                     ??_display:	; 0 bytes @ 0x8
   530                           	global	?_LCD_Cursor
   531  005B                     ?_LCD_Cursor:	; 0 bytes @ 0x8
   532                           	global	??___lmul
   533  005B                     ??___lmul:	; 0 bytes @ 0x8
   534                           	global	LCD_Cursor@column
   535  005B                     LCD_Cursor@column:	; 1 bytes @ 0x8
   536  005B                     	ds	1
   537                           	global	??_LCD_Cursor
   538  005C                     ??_LCD_Cursor:	; 0 bytes @ 0x9
   539                           	global	display@addr
   540  005C                     display@addr:	; 1 bytes @ 0x9
   541                           	global	___lmul@product
   542  005C                     ___lmul@product:	; 4 bytes @ 0x9
   543  005C                     	ds	1
   544                           	global	display@k
   545  005D                     display@k:	; 1 bytes @ 0xA
   546                           	global	LCD_Cursor@row
   547  005D                     LCD_Cursor@row:	; 1 bytes @ 0xA
   548  005D                     	ds	1
   549                           	global	?_dispstr
   550  005E                     ?_dispstr:	; 0 bytes @ 0xB
   551                           	global	?_dispnum
   552  005E                     ?_dispnum:	; 0 bytes @ 0xB
   553                           	global	dispstr@stcol
   554  005E                     dispstr@stcol:	; 1 bytes @ 0xB
   555                           	global	dispnum@num
   556  005E                     dispnum@num:	; 2 bytes @ 0xB
   557  005E                     	ds	1
   558                           	global	dispstr@endcol
   559  005F                     dispstr@endcol:	; 1 bytes @ 0xC
   560  005F                     	ds	1
   561                           	global	dispstr@addr
   562  0060                     dispstr@addr:	; 1 bytes @ 0xD
   563                           	global	dispnum@stcol
   564  0060                     dispnum@stcol:	; 1 bytes @ 0xD
   565  0060                     	ds	1
   566                           	global	??_dispstr
   567  0061                     ??_dispstr:	; 0 bytes @ 0xE
   568                           	global	dispnum@endcol
   569  0061                     dispnum@endcol:	; 1 bytes @ 0xE
   570  0061                     	ds	1
   571                           	global	dispstr@s
   572  0062                     dispstr@s:	; 1 bytes @ 0xF
   573                           	global	dispnum@dp
   574  0062                     dispnum@dp:	; 1 bytes @ 0xF
   575  0062                     	ds	1
   576                           	global	dispstr@i
   577  0063                     dispstr@i:	; 1 bytes @ 0x10
   578                           	global	dispnum@addr
   579  0063                     dispnum@addr:	; 1 bytes @ 0x10
   580  0063                     	ds	1
   581                           	global	??_dispnum
   582  0064                     ??_dispnum:	; 0 bytes @ 0x11
   583  0064                     	ds	2
   584                           	global	dispnum@i
   585  0066                     dispnum@i:	; 1 bytes @ 0x13
   586  0066                     	ds	1
   587                           	global	??_main
   588  0067                     ??_main:	; 0 bytes @ 0x14
   589  0067                     	ds	4
   590 ;;Data sizes: Strings 36, constant 0, data 0, bss 222, persistent 1 stack 0
   591 ;;Auto spaces:   Size  Autos    Used
   592 ;; COMMON          14      6      12
   593 ;; BANK0           80     24      76
   594 ;; BANK1           80      0      16
   595 ;; BANK3           96      0      75
   596 ;; BANK2           96      0      75
   597                           
   598 ;;
   599 ;; Pointer list with targets:
   600                           
   601 ;; ?___lmul	unsigned long  size(1) Largest target is 0
   602 ;;
   603 ;; ?___lwdiv	unsigned int  size(1) Largest target is 0
   604 ;;
   605 ;; ?___lwmod	unsigned int  size(1) Largest target is 0
   606 ;;
   607 ;; dispstr@s	PTR const unsigned char  size(1) Largest target is 19
   608 ;;		 -> STR_2(CODE[19]), STR_1(CODE[17]), 
   609 ;;
   610                           
   611                           
   612 ;;
   613 ;; Critical Paths under _main in COMMON
   614 ;;
   615 ;;   None.
   616 ;;
   617 ;; Critical Paths under _isr in COMMON
   618 ;;
   619 ;;   None.
   620 ;;
   621 ;; Critical Paths under _main in BANK0
   622 ;;
   623 ;;   _main->_dispnum
   624 ;;   _dispnum->_display
   625 ;;   _dispstr->_display
   626 ;;   _LCD_Cursor->_write_lcd_command
   627 ;;   _display->_write_lcd_command
   628 ;;   _display->_write_lcd_data
   629 ;;   _initlcd->_write_lcd_command
   630 ;;   _write_lcd_data->_send_nibble2lcd
   631 ;;   _write_lcd_command->_send_nibble2lcd
   632 ;;   _channel_Sel->_delay
   633 ;;   _send_nibble2lcd->_delay
   634 ;;
   635 ;; Critical Paths under _isr in BANK0
   636 ;;
   637 ;;   None.
   638 ;;
   639 ;; Critical Paths under _main in BANK1
   640 ;;
   641 ;;   None.
   642 ;;
   643 ;; Critical Paths under _isr in BANK1
   644 ;;
   645 ;;   None.
   646 ;;
   647 ;; Critical Paths under _main in BANK3
   648 ;;
   649 ;;   None.
   650 ;;
   651 ;; Critical Paths under _isr in BANK3
   652 ;;
   653 ;;   None.
   654 ;;
   655 ;; Critical Paths under _main in BANK2
   656 ;;
   657 ;;   None.
   658 ;;
   659 ;; Critical Paths under _isr in BANK2
   660 ;;
   661 ;;   None.
   662                           
   663 ;;
   664 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   665 ;;
   666                           
   667 ;;
   668 ;;Call Graph Tables:
   669 ;;
   670 ;; ---------------------------------------------------------------------------------
   671 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   672 ;; ---------------------------------------------------------------------------------
   673 ;; (0) _main                                                 4     4      0    4081
   674 ;;                                             20 BANK0      4     4      0
   675 ;;                             _inithw
   676 ;;                            _initlcd
   677 ;;                            _initvar
   678 ;;                            _dispstr
   679 ;;                         _LCD_Cursor
   680 ;;                        _channel_Sel
   681 ;;                             ___lmul
   682 ;;                            _dispnum
   683 ;;                              _delay
   684 ;; ---------------------------------------------------------------------------------
   685 ;; (1) _dispnum                                              9     3      6    1622
   686 ;;                                             11 BANK0      9     3      6
   687 ;;                            ___lwmod
   688 ;;                            ___lwdiv
   689 ;;                            _display
   690 ;; ---------------------------------------------------------------------------------
   691 ;; (1) _dispstr                                              6     3      3    1087
   692 ;;                                             11 BANK0      6     3      3
   693 ;;                            _display
   694 ;; ---------------------------------------------------------------------------------
   695 ;; (1) _LCD_Cursor                                           3     2      1     443
   696 ;;                                              8 BANK0      3     2      1
   697 ;;                  _write_lcd_command
   698 ;; ---------------------------------------------------------------------------------
   699 ;; (2) _display                                              3     3      0     830
   700 ;;                                              8 BANK0      3     3      0
   701 ;;                  _write_lcd_command
   702 ;;                     _write_lcd_data
   703 ;;                              _delay
   704 ;; ---------------------------------------------------------------------------------
   705 ;; (1) _initlcd                                              1     1      0     415
   706 ;;                                              8 BANK0      1     1      0
   707 ;;                  _write_lcd_command
   708 ;;                              _delay
   709 ;; ---------------------------------------------------------------------------------
   710 ;; (3) _write_lcd_data                                       2     2      0     285
   711 ;;                                              6 BANK0      2     2      0
   712 ;;                    _send_nibble2lcd
   713 ;; ---------------------------------------------------------------------------------
   714 ;; (3) _write_lcd_command                                    2     2      0     350
   715 ;;                                              6 BANK0      2     2      0
   716 ;;                    _send_nibble2lcd
   717 ;;                              _delay
   718 ;; ---------------------------------------------------------------------------------
   719 ;; (1) _channel_Sel                                          1     1      0     313
   720 ;;                                              4 BANK0      1     1      0
   721 ;;                              _delay
   722 ;; ---------------------------------------------------------------------------------
   723 ;; (4) _send_nibble2lcd                                      3     2      1     220
   724 ;;                                              4 BANK0      2     1      1
   725 ;;                              _delay
   726 ;; ---------------------------------------------------------------------------------
   727 ;; (1) ___lmul                                              13     5      8     136
   728 ;;                                              0 BANK0     13     5      8
   729 ;; ---------------------------------------------------------------------------------
   730 ;; (2) ___lwmod                                              6     2      4     232
   731 ;;                                              0 BANK0      6     2      4
   732 ;; ---------------------------------------------------------------------------------
   733 ;; (2) ___lwdiv                                              8     4      4     241
   734 ;;                                              0 BANK0      8     4      4
   735 ;; ---------------------------------------------------------------------------------
   736 ;; (1) _initvar                                              0     0      0       0
   737 ;; ---------------------------------------------------------------------------------
   738 ;; (1) _delay                                                4     2      2      65
   739 ;;                                              0 BANK0      4     2      2
   740 ;; ---------------------------------------------------------------------------------
   741 ;; (1) _inithw                                               0     0      0       0
   742 ;; ---------------------------------------------------------------------------------
   743 ;; Estimated maximum stack depth 4
   744 ;; ---------------------------------------------------------------------------------
   745 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   746 ;; ---------------------------------------------------------------------------------
   747 ;; (6) _isr                                                  6     6      0       0
   748 ;;                                              0 COMMON     6     6      0
   749 ;; ---------------------------------------------------------------------------------
   750 ;; Estimated maximum stack depth 6
   751 ;; ---------------------------------------------------------------------------------
   752                           
   753 ;; Call Graph Graphs:
   754                           
   755 ;; _main (ROOT)
   756 ;;   _inithw
   757 ;;   _initlcd
   758 ;;     _write_lcd_command
   759 ;;       _send_nibble2lcd
   760 ;;         _delay
   761 ;;       _delay
   762 ;;     _delay
   763 ;;   _initvar
   764 ;;   _dispstr
   765 ;;     _display
   766 ;;       _write_lcd_command
   767 ;;         _send_nibble2lcd
   768 ;;           _delay
   769 ;;         _delay
   770 ;;       _write_lcd_data
   771 ;;         _send_nibble2lcd
   772 ;;           _delay
   773 ;;       _delay
   774 ;;   _LCD_Cursor
   775 ;;     _write_lcd_command
   776 ;;       _send_nibble2lcd
   777 ;;         _delay
   778 ;;       _delay
   779 ;;   _channel_Sel
   780 ;;     _delay
   781 ;;   ___lmul
   782 ;;   _dispnum
   783 ;;     ___lwmod
   784 ;;     ___lwdiv
   785 ;;     _display
   786 ;;       _write_lcd_command
   787 ;;         _send_nibble2lcd
   788 ;;           _delay
   789 ;;         _delay
   790 ;;       _write_lcd_data
   791 ;;         _send_nibble2lcd
   792 ;;           _delay
   793 ;;       _delay
   794 ;;   _delay
   795 ;;
   796 ;; _isr (ROOT)
   797 ;;
   798                           
   799 ;; Address spaces:
   800                           
   801 ;;Name               Size   Autos  Total    Cost      Usage
   802 ;;BITCOMMON            E      0       1       0        7.1%
   803 ;;EEDATA             100      0       0       0        0.0%
   804 ;;NULL                 0      0       0       0        0.0%
   805 ;;CODE                 0      0       0       0        0.0%
   806 ;;COMMON               E      6       C       1       85.7%
   807 ;;BITSFR0              0      0       0       1        0.0%
   808 ;;SFR0                 0      0       0       1        0.0%
   809 ;;BITSFR1              0      0       0       2        0.0%
   810 ;;SFR1                 0      0       0       2        0.0%
   811 ;;STACK                0      0       5       2        0.0%
   812 ;;ABS                  0      0      FE       3        0.0%
   813 ;;BITBANK0            50      0       0       4        0.0%
   814 ;;BITSFR3              0      0       0       4        0.0%
   815 ;;SFR3                 0      0       0       4        0.0%
   816 ;;BANK0               50     18      4C       5       95.0%
   817 ;;BITSFR2              0      0       0       5        0.0%
   818 ;;SFR2                 0      0       0       5        0.0%
   819 ;;BITBANK1            50      0       0       6        0.0%
   820 ;;BANK1               50      0      10       7       20.0%
   821 ;;BITBANK3            60      0       0       8        0.0%
   822 ;;BANK3               60      0      4B       9       78.1%
   823 ;;BITBANK2            60      0       0      10        0.0%
   824 ;;BANK2               60      0      4B      11       78.1%
   825 ;;DATA                 0      0     103      12        0.0%
   826                           
   827                           	global	_main
   828                           psect	maintext,global,class=CODE,delta=2
   829                           global __pmaintext
   830  003D                     __pmaintext:
   831                           
   832 ;; *************** function _main *****************
   833 ;; Defined at:
   834 ;;		line 319 in file "C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;		None
   839 ;; Return value:  Size  Location     Type
   840 ;;		None               void
   841 ;; Registers used:
   842 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : 17F/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   848 ;;      Params:         0       0       0       0       0
   849 ;;      Locals:         0       0       0       0       0
   850 ;;      Temps:          0       4       0       0       0
   851 ;;      Totals:         0       4       0       0       0
   852 ;;Total ram usage:        4 bytes
   853 ;; Hardware stack levels required when called:    6
   854 ;; This function calls:
   855 ;;		_inithw
   856 ;;		_initlcd
   857 ;;		_initvar
   858 ;;		_dispstr
   859 ;;		_LCD_Cursor
   860 ;;		_channel_Sel
   861 ;;		___lmul
   862 ;;		_dispnum
   863 ;;		_delay
   864 ;; This function is called by:
   865 ;;		Startup code after reset
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           psect	maintext
   869                           	file	"C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
   870                           	line	319
   871                           	global	__size_of_main
   872  0105                     	__size_of_main	equ	__end_of_main-_main
   873                           	
   874  003D                     _main:	
   875                           	opt	stack 8
   876                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   877                           	line	320
   878                           	
   879  003D                     l3142:	
   880                           ;ADCLCD.C: 320: inithw() ;
   881  003D  120A  118A  2482   	fcall	_inithw
              120A  118A         
   882                           	line	321
   883                           	
   884  0042                     l3144:	
   885                           ;ADCLCD.C: 321: RD0=0;
   886  0042  1283               	bcf	status, 5	;RP0=0, select bank0
   887  0043  1303               	bcf	status, 6	;RP1=0, select bank0
   888  0044  1008               	bcf	(64/8),(64)&7
   889                           	line	322
   890                           	
   891  0045                     l3146:	
   892                           ;ADCLCD.C: 322: RC0=0;
   893  0045  1007               	bcf	(56/8),(56)&7
   894                           	line	323
   895                           	
   896  0046                     l3148:	
   897                           ;ADCLCD.C: 323: RC1=0;
   898  0046  1087               	bcf	(57/8),(57)&7
   899                           	line	324
   900                           	
   901  0047                     l3150:	
   902                           ;ADCLCD.C: 324: RC2=0;
   903  0047  1107               	bcf	(58/8),(58)&7
   904                           	line	325
   905                           	
   906  0048                     l3152:	
   907                           ;ADCLCD.C: 325: RC3=0;
   908  0048  1187               	bcf	(59/8),(59)&7
   909                           	line	327
   910                           ;ADCLCD.C: 327: initlcd() ;
   911  0049  120A  118A  2142   	fcall	_initlcd
              120A  118A         
   912                           	line	328
   913                           ;ADCLCD.C: 328: initvar() ;
   914  004E  120A  118A  25AE   	fcall	_initvar
              120A  118A         
   915                           	line	331
   916                           	
   917  0053                     l3154:	
   918                           ;ADCLCD.C: 331: dispstr("WELCOME         ", 0,15,0x80) ;
   919  0053  1003               	clrc
   920  0054  3000               	movlw	0
   921  0055  1803               	btfsc	status,0
   922  0056  3001               	movlw	1
   923  0057  1283               	bcf	status, 5	;RP0=0, select bank0
   924  0058  1303               	bcf	status, 6	;RP1=0, select bank0
   925  0059  00DE               	movwf	(?_dispstr)
   926  005A  300F               	movlw	(0Fh)
   927  005B  00E7               	movwf	(??_main+0)+0
   928  005C  0867               	movf	(??_main+0)+0,w
   929  005D  00DF               	movwf	0+(?_dispstr)+01h
   930  005E  3080               	movlw	(080h)
   931  005F  00E8               	movwf	(??_main+1)+0
   932  0060  0868               	movf	(??_main+1)+0,w
   933  0061  00E0               	movwf	0+(?_dispstr)+02h
   934  0062  3014               	movlw	((STR_1-__stringbase))&0ffh
   935  0063  120A  118A  24BE   	fcall	_dispstr
              120A  118A         
   936                           	line	333
   937                           	
   938  0068                     l3156:	
   939                           ;ADCLCD.C: 333: LCD_Cursor(1,1);
   940  0068  1283               	bcf	status, 5	;RP0=0, select bank0
   941  0069  1303               	bcf	status, 6	;RP1=0, select bank0
   942  006A  01DB               	clrf	(?_LCD_Cursor)
   943  006B  1403               	bsf	status,0
   944  006C  0DDB               	rlf	(?_LCD_Cursor),f
   945  006D  3001               	movlw	(01h)
   946  006E  120A  118A  2585   	fcall	_LCD_Cursor
              120A  118A         
   947                           	line	334
   948                           	
   949  0073                     l3158:	
   950                           ;ADCLCD.C: 334: adcflag=0;
   951  0073  10FB               	bcf	(_adcflag/8),(_adcflag)&7
   952                           	line	335
   953                           	
   954  0074                     l3160:	
   955                           ;ADCLCD.C: 335: scan=0;
   956  0074  1003               	clrc
   957  0075  3000               	movlw	0
   958  0076  1803               	btfsc	status,0
   959  0077  3001               	movlw	1
   960  0078  1283               	bcf	status, 5	;RP0=0, select bank0
   961  0079  1303               	bcf	status, 6	;RP1=0, select bank0
   962  007A  00D1               	movwf	(_scan)
   963                           	line	336
   964                           	
   965  007B                     l3162:	
   966                           ;ADCLCD.C: 336: adcflag=0;
   967  007B  10FB               	bcf	(_adcflag/8),(_adcflag)&7
   968                           	line	337
   969                           	
   970  007C                     l3164:	
   971                           ;ADCLCD.C: 337: Second=0;
   972  007C  1003               	clrc
   973  007D  3000               	movlw	0
   974  007E  1803               	btfsc	status,0
   975  007F  3001               	movlw	1
   976  0080  00CD               	movwf	(_Second)
   977                           	line	339
   978                           ;ADCLCD.C: 339: while(1)
   979                           	
   980  0081                     l732:	
   981                           	line	342
   982                           ;ADCLCD.C: 340: {
   983                           ;ADCLCD.C: 342: channel_Sel(0);
   984  0081  3000               	movlw	(0)
   985  0082  120A  118A  22E0   	fcall	_channel_Sel
              120A  118A         
   986                           	line	343
   987                           ;ADCLCD.C: 343: while(!adcflag);
   988  0087  2888               	goto	l733
   989                           	
   990  0088                     l734:	
   991                           	
   992  0088                     l733:	
   993  0088  1CFB               	btfss	(_adcflag/8),(_adcflag)&7
   994  0089  288B               	goto	u3571
   995  008A  288C               	goto	u3570
   996  008B                     u3571:
   997  008B  2888               	goto	l734
   998  008C                     u3570:
   999                           	
  1000  008C                     l735:	
  1001                           	line	344
  1002                           ;ADCLCD.C: 344: ADGO=0;
  1003  008C  1283               	bcf	status, 5	;RP0=0, select bank0
  1004  008D  1303               	bcf	status, 6	;RP1=0, select bank0
  1005  008E  111F               	bcf	(250/8),(250)&7
  1006                           	line	345
  1007                           ;ADCLCD.C: 345: adcflag=0;
  1008  008F  10FB               	bcf	(_adcflag/8),(_adcflag)&7
  1009                           	line	346
  1010                           	
  1011  0090                     l3166:	
  1012                           ;ADCLCD.C: 346: Temp1=adcval;
  1013  0090  083C               	movf	(_adcval),w
  1014  0091  00B0               	movwf	(_Temp1)
  1015  0092  083D               	movf	(_adcval+1),w
  1016  0093  00B1               	movwf	((_Temp1))+1
  1017  0094  01B2               	clrf	2+((_Temp1))
  1018  0095  01B3               	clrf	3+((_Temp1))
  1019                           	line	347
  1020                           	
  1021  0096                     l3168:	
  1022                           ;ADCLCD.C: 347: Temp1*=10;
  1023  0096  3000               	movlw	0
  1024  0097  00D6               	movwf	(?___lmul+3)
  1025  0098  3000               	movlw	0
  1026  0099  00D5               	movwf	(?___lmul+2)
  1027  009A  3000               	movlw	0
  1028  009B  00D4               	movwf	(?___lmul+1)
  1029  009C  300A               	movlw	0Ah
  1030  009D  00D3               	movwf	(?___lmul)
  1031                           
  1032  009E  0833               	movf	(_Temp1+3),w
  1033  009F  00DA               	movwf	3+(?___lmul)+04h
  1034  00A0  0832               	movf	(_Temp1+2),w
  1035  00A1  00D9               	movwf	2+(?___lmul)+04h
  1036  00A2  0831               	movf	(_Temp1+1),w
  1037  00A3  00D8               	movwf	1+(?___lmul)+04h
  1038  00A4  0830               	movf	(_Temp1),w
  1039  00A5  00D7               	movwf	0+(?___lmul)+04h
  1040                           
  1041  00A6  120A  118A  2382   	fcall	___lmul
              120A  118A         
  1042  00AB  1283               	bcf	status, 5	;RP0=0, select bank0
  1043  00AC  1303               	bcf	status, 6	;RP1=0, select bank0
  1044  00AD  0856               	movf	(3+(?___lmul)),w
  1045  00AE  00B3               	movwf	(_Temp1+3)
  1046  00AF  0855               	movf	(2+(?___lmul)),w
  1047  00B0  00B2               	movwf	(_Temp1+2)
  1048  00B1  0854               	movf	(1+(?___lmul)),w
  1049  00B2  00B1               	movwf	(_Temp1+1)
  1050  00B3  0853               	movf	(0+(?___lmul)),w
  1051  00B4  00B0               	movwf	(_Temp1)
  1052                           
  1053                           	line	348
  1054                           	
  1055  00B5                     l3170:	
  1056                           ;ADCLCD.C: 348: Temp1/=2;
  1057  00B5  3001               	movlw	01h
  1058  00B6                     u3585:
  1059  00B6  1003               	clrc
  1060  00B7  0CB3               	rrf	(_Temp1+3),f
  1061  00B8  0CB2               	rrf	(_Temp1+2),f
  1062  00B9  0CB1               	rrf	(_Temp1+1),f
  1063  00BA  0CB0               	rrf	(_Temp1),f
  1064  00BB  3EFF               	addlw	-1
  1065  00BC  1D03               	skipz
  1066  00BD  28B6               	goto	u3585
  1067                           
  1068                           	line	349
  1069                           	
  1070  00BE                     l3172:	
  1071                           ;ADCLCD.C: 349: Temp1=Temp1-10;
  1072  00BE  30F6               	movlw	0F6h
  1073  00BF  00E7               	movwf	((??_main+0)+0)
  1074  00C0  30FF               	movlw	0FFh
  1075  00C1  00E8               	movwf	((??_main+0)+0+1)
  1076  00C2  30FF               	movlw	0FFh
  1077  00C3  00E9               	movwf	((??_main+0)+0+2)
  1078  00C4  30FF               	movlw	0FFh
  1079  00C5  00EA               	movwf	((??_main+0)+0+3)
  1080  00C6  0830               	movf	(_Temp1),w
  1081  00C7  07E7               	addwf	(??_main+0)+0,f
  1082  00C8  0831               	movf	(_Temp1+1),w
  1083  00C9  1803               	skipnc
  1084  00CA  0F31               	incfsz	(_Temp1+1),w
  1085  00CB  28CD               	goto	u3590
  1086  00CC  28CE               	goto	u3591
  1087  00CD                     u3590:
  1088  00CD  07E8               	addwf	(??_main+0)+1,f
  1089  00CE                     u3591:
  1090  00CE  0832               	movf	(_Temp1+2),w
  1091  00CF  1803               	skipnc
  1092  00D0  0F32               	incfsz	(_Temp1+2),w
  1093  00D1  28D3               	goto	u3592
  1094  00D2  28D4               	goto	u3593
  1095  00D3                     u3592:
  1096  00D3  07E9               	addwf	(??_main+0)+2,f
  1097  00D4                     u3593:
  1098  00D4  0833               	movf	(_Temp1+3),w
  1099  00D5  1803               	skipnc
  1100  00D6  0A33               	incf	(_Temp1+3),w
  1101  00D7  07EA               	addwf	(??_main+0)+3,f
  1102  00D8  086A               	movf	3+(??_main+0)+0,w
  1103  00D9  00B3               	movwf	(_Temp1+3)
  1104  00DA  0869               	movf	2+(??_main+0)+0,w
  1105  00DB  00B2               	movwf	(_Temp1+2)
  1106  00DC  0868               	movf	1+(??_main+0)+0,w
  1107  00DD  00B1               	movwf	(_Temp1+1)
  1108  00DE  0867               	movf	0+(??_main+0)+0,w
  1109  00DF  00B0               	movwf	(_Temp1)
  1110                           
  1111                           	line	350
  1112                           	
  1113  00E0                     l3174:	
  1114                           ;ADCLCD.C: 350: dispstr("Temp :            ",0,15,0x80) ;
  1115  00E0  1003               	clrc
  1116  00E1  3000               	movlw	0
  1117  00E2  1803               	btfsc	status,0
  1118  00E3  3001               	movlw	1
  1119  00E4  00DE               	movwf	(?_dispstr)
  1120  00E5  300F               	movlw	(0Fh)
  1121  00E6  00E7               	movwf	(??_main+0)+0
  1122  00E7  0867               	movf	(??_main+0)+0,w
  1123  00E8  00DF               	movwf	0+(?_dispstr)+01h
  1124  00E9  3080               	movlw	(080h)
  1125  00EA  00E8               	movwf	(??_main+1)+0
  1126  00EB  0868               	movf	(??_main+1)+0,w
  1127  00EC  00E0               	movwf	0+(?_dispstr)+02h
  1128  00ED  3001               	movlw	((STR_2-__stringbase))&0ffh
  1129  00EE  120A  118A  24BE   	fcall	_dispstr
              120A  118A         
  1130                           	line	351
  1131                           	
  1132  00F3                     l3176:	
  1133                           ;ADCLCD.C: 351: dispnum(Temp1,8,11,10,0x80) ;
  1134  00F3  1283               	bcf	status, 5	;RP0=0, select bank0
  1135  00F4  1303               	bcf	status, 6	;RP1=0, select bank0
  1136  00F5  0831               	movf	(_Temp1+1),w
  1137  00F6  01DF               	clrf	(?_dispnum+1)
  1138  00F7  07DF               	addwf	(?_dispnum+1)
  1139  00F8  0830               	movf	(_Temp1),w
  1140  00F9  01DE               	clrf	(?_dispnum)
  1141  00FA  07DE               	addwf	(?_dispnum)
  1142                           
  1143  00FB  3008               	movlw	(08h)
  1144  00FC  00E7               	movwf	(??_main+0)+0
  1145  00FD  0867               	movf	(??_main+0)+0,w
  1146  00FE  00E0               	movwf	0+(?_dispnum)+02h
  1147  00FF  300B               	movlw	(0Bh)
  1148  0100  00E8               	movwf	(??_main+1)+0
  1149  0101  0868               	movf	(??_main+1)+0,w
  1150  0102  00E1               	movwf	0+(?_dispnum)+03h
  1151  0103  300A               	movlw	(0Ah)
  1152  0104  00E9               	movwf	(??_main+2)+0
  1153  0105  0869               	movf	(??_main+2)+0,w
  1154  0106  00E2               	movwf	0+(?_dispnum)+04h
  1155  0107  3080               	movlw	(080h)
  1156  0108  00EA               	movwf	(??_main+3)+0
  1157  0109  086A               	movf	(??_main+3)+0,w
  1158  010A  00E3               	movwf	0+(?_dispnum)+05h
  1159  010B  120A  118A  227F   	fcall	_dispnum
              120A  118A         
  1160                           	line	352
  1161                           	
  1162  0110                     l3178:	
  1163                           ;ADCLCD.C: 352: if(Temp1>300)
  1164  0110  3000               	movlw	0
  1165  0111  1283               	bcf	status, 5	;RP0=0, select bank0
  1166  0112  1303               	bcf	status, 6	;RP1=0, select bank0
  1167  0113  0233               	subwf	(_Temp1+3),w
  1168  0114  1D03               	skipz
  1169  0115  2920               	goto	u3605
  1170  0116  3000               	movlw	0
  1171  0117  0232               	subwf	(_Temp1+2),w
  1172  0118  1D03               	skipz
  1173  0119  2920               	goto	u3605
  1174  011A  3001               	movlw	01h
  1175  011B  0231               	subwf	(_Temp1+1),w
  1176  011C  1D03               	skipz
  1177  011D  2920               	goto	u3605
  1178  011E  302D               	movlw	02Dh
  1179  011F  0230               	subwf	(_Temp1),w
  1180  0120                     u3605:
  1181  0120  1C03               	skipc
  1182  0121  2923               	goto	u3601
  1183  0122  2924               	goto	u3600
  1184  0123                     u3601:
  1185  0123  2926               	goto	l736
  1186  0124                     u3600:
  1187                           	line	354
  1188                           	
  1189  0124                     l3180:	
  1190                           ;ADCLCD.C: 353: {
  1191                           ;ADCLCD.C: 354: RD0=1;
  1192  0124  1408               	bsf	(64/8),(64)&7
  1193                           	line	355
  1194                           ;ADCLCD.C: 355: }
  1195  0125  2927               	goto	l737
  1196                           	line	356
  1197                           	
  1198  0126                     l736:	
  1199                           	line	358
  1200                           ;ADCLCD.C: 356: else
  1201                           ;ADCLCD.C: 357: {
  1202                           ;ADCLCD.C: 358: RD0=0;
  1203  0126  1008               	bcf	(64/8),(64)&7
  1204                           	line	360
  1205                           	
  1206  0127                     l737:	
  1207                           	line	361
  1208                           ;ADCLCD.C: 360: }
  1209                           ;ADCLCD.C: 361: if(!RD7)
  1210  0127  1B88               	btfsc	(71/8),(71)&7
  1211  0128  292A               	goto	u3611
  1212  0129  292B               	goto	u3610
  1213  012A                     u3611:
  1214  012A  293E               	goto	l738
  1215  012B                     u3610:
  1216                           	line	363
  1217                           	
  1218  012B                     l3182:	
  1219                           ;ADCLCD.C: 362: {
  1220                           ;ADCLCD.C: 363: RC0=0;
  1221  012B  1007               	bcf	(56/8),(56)&7
  1222                           	line	364
  1223                           ;ADCLCD.C: 364: RC1=1;
  1224  012C  1487               	bsf	(57/8),(57)&7
  1225                           	line	365
  1226                           ;ADCLCD.C: 365: RC2=0;
  1227  012D  1107               	bcf	(58/8),(58)&7
  1228                           	line	366
  1229                           ;ADCLCD.C: 366: RC3=1;
  1230  012E  1587               	bsf	(59/8),(59)&7
  1231                           	line	367
  1232                           	
  1233  012F                     l3184:	
  1234                           ;ADCLCD.C: 367: delay(50);
  1235  012F  3032               	movlw	low(032h)
  1236  0130  00D3               	movwf	(?_delay)
  1237  0131  3000               	movlw	high(032h)
  1238  0132  00D4               	movwf	((?_delay))+1
  1239  0133  120A  118A  25D0   	fcall	_delay
              120A  118A         
  1240                           	line	368
  1241                           	
  1242  0138                     l3186:	
  1243                           ;ADCLCD.C: 368: RC0=0;
  1244  0138  1283               	bcf	status, 5	;RP0=0, select bank0
  1245  0139  1303               	bcf	status, 6	;RP1=0, select bank0
  1246  013A  1007               	bcf	(56/8),(56)&7
  1247                           	line	369
  1248                           	
  1249  013B                     l3188:	
  1250                           ;ADCLCD.C: 369: RC1=0;
  1251  013B  1087               	bcf	(57/8),(57)&7
  1252                           	line	370
  1253                           	
  1254  013C                     l3190:	
  1255                           ;ADCLCD.C: 370: RC2=0;
  1256  013C  1107               	bcf	(58/8),(58)&7
  1257                           	line	371
  1258                           	
  1259  013D                     l3192:	
  1260                           ;ADCLCD.C: 371: RC3=0;
  1261  013D  1187               	bcf	(59/8),(59)&7
  1262                           	line	372
  1263                           	
  1264  013E                     l738:	
  1265                           	line	374
  1266                           	
  1267  013E                     l739:	
  1268                           	line	339
  1269  013E  2881               	goto	l732
  1270                           	
  1271  013F                     l740:	
  1272                           	line	375
  1273                           	
  1274  013F                     l741:	
  1275                           	global	start
  1276  013F  120A  118A  2810   	ljmp	start
  1277                           	opt stack 0
  1278                           GLOBAL	__end_of_main
  1279  0142                     	__end_of_main:
  1280 ;; =============== function _main ends ============
  1281                           
  1282                           	signat	_main,88
  1283                           	global	_dispnum
  1284                           psect	text617,local,class=CODE,delta=2
  1285                           global __ptext617
  1286  027F                     __ptext617:
  1287                           
  1288 ;; *************** function _dispnum *****************
  1289 ;; Defined at:
  1290 ;;		line 230 in file "C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  1291 ;; Parameters:    Size  Location     Type
  1292 ;;  num             2   11[BANK0 ] unsigned int 
  1293 ;;  stcol           1   13[BANK0 ] unsigned char 
  1294 ;;  endcol          1   14[BANK0 ] unsigned char 
  1295 ;;  dp              1   15[BANK0 ] unsigned char 
  1296 ;;  addr            1   16[BANK0 ] unsigned char 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;  i               1   19[BANK0 ] unsigned char 
  1299 ;; Return value:  Size  Location     Type
  1300 ;;		None               void
  1301 ;; Registers used:
  1302 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1308 ;;      Params:         0       6       0       0       0
  1309 ;;      Locals:         0       1       0       0       0
  1310 ;;      Temps:          0       2       0       0       0
  1311 ;;      Totals:         0       9       0       0       0
  1312 ;;Total ram usage:        9 bytes
  1313 ;; Hardware stack levels used:    1
  1314 ;; Hardware stack levels required when called:    5
  1315 ;; This function calls:
  1316 ;;		___lwmod
  1317 ;;		___lwdiv
  1318 ;;		_display
  1319 ;; This function is called by:
  1320 ;;		_main
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           psect	text617
  1324                           	file	"C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  1325                           	line	230
  1326                           	global	__size_of_dispnum
  1327  0061                     	__size_of_dispnum	equ	__end_of_dispnum-_dispnum
  1328                           	
  1329  027F                     _dispnum:	
  1330                           	opt	stack 7
  1331                           ; Regs used in _dispnum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1332                           	line	232
  1333                           	
  1334  027F                     l3126:	
  1335                           ;ADCLCD.C: 231: UCHAR i ;
  1336                           ;ADCLCD.C: 232: for(i = (endcol+1) ;i != stcol ; i--)
  1337  027F  1283               	bcf	status, 5	;RP0=0, select bank0
  1338  0280  1303               	bcf	status, 6	;RP1=0, select bank0
  1339  0281  0861               	movf	(dispnum@endcol),w
  1340  0282  3E01               	addlw	01h
  1341  0283  00E4               	movwf	(??_dispnum+0)+0
  1342  0284  0864               	movf	(??_dispnum+0)+0,w
  1343  0285  00E6               	movwf	(dispnum@i)
  1344  0286  2AD3               	goto	l681
  1345                           	line	233
  1346                           	
  1347  0287                     l682:	
  1348                           	line	234
  1349                           	
  1350  0287                     l3128:	
  1351                           ;ADCLCD.C: 233: {
  1352                           ;ADCLCD.C: 234: if(dp == (i-1))
  1353  0287  0866               	movf	(dispnum@i),w
  1354  0288  3EFF               	addlw	low(-1)
  1355  0289  00E4               	movwf	(??_dispnum+0)+0
  1356  028A  30FF               	movlw	high(-1)
  1357  028B  1803               	skipnc
  1358  028C  3000               	movlw	(high(-1)+1)&0ffh
  1359  028D  00E5               	movwf	((??_dispnum+0)+0)+1
  1360  028E  0862               	movf	(dispnum@dp),w
  1361  028F  0664               	xorwf	0+(??_dispnum+0)+0,w
  1362  0290  0465               	iorwf	1+(??_dispnum+0)+0,w
  1363  0291  1D03               	skipz
  1364  0292  2A94               	goto	u3551
  1365  0293  2A95               	goto	u3550
  1366  0294                     u3551:
  1367  0294  2A9F               	goto	l683
  1368  0295                     u3550:
  1369                           	line	235
  1370                           	
  1371  0295                     l3130:	
  1372                           ;ADCLCD.C: 235: str[i-1] = '.' ;
  1373  0295  302E               	movlw	(02Eh)
  1374  0296  00E4               	movwf	(??_dispnum+0)+0
  1375  0297  0866               	movf	(dispnum@i),w
  1376  0298  3EFF               	addlw	0FFh
  1377  0299  3E20               	addlw	_str&0ffh
  1378  029A  0084               	movwf	fsr0
  1379  029B  0864               	movf	(??_dispnum+0)+0,w
  1380  029C  1383               	bcf	status, 7	;select IRP bank0
  1381  029D  0080               	movwf	indf
  1382  029E  2AD1               	goto	l684
  1383                           	line	236
  1384                           	
  1385  029F                     l683:	
  1386                           	line	238
  1387                           	
  1388  029F                     l3132:	
  1389                           ;ADCLCD.C: 236: else
  1390                           ;ADCLCD.C: 237: {
  1391                           ;ADCLCD.C: 238: str[i-1] = ((num % 10) + '0') ;
  1392  029F  300A               	movlw	low(0Ah)
  1393  02A0  00D3               	movwf	(?___lwmod)
  1394  02A1  3000               	movlw	high(0Ah)
  1395  02A2  00D4               	movwf	((?___lwmod))+1
  1396  02A3  085F               	movf	(dispnum@num+1),w
  1397  02A4  01D6               	clrf	1+(?___lwmod)+02h
  1398  02A5  07D6               	addwf	1+(?___lwmod)+02h
  1399  02A6  085E               	movf	(dispnum@num),w
  1400  02A7  01D5               	clrf	0+(?___lwmod)+02h
  1401  02A8  07D5               	addwf	0+(?___lwmod)+02h
  1402                           
  1403  02A9  120A  118A  23CA   	fcall	___lwmod
              120A  118A         
  1404  02AE  1283               	bcf	status, 5	;RP0=0, select bank0
  1405  02AF  1303               	bcf	status, 6	;RP1=0, select bank0
  1406  02B0  0853               	movf	(0+(?___lwmod)),w
  1407  02B1  3E30               	addlw	030h
  1408  02B2  00E4               	movwf	(??_dispnum+0)+0
  1409  02B3  0866               	movf	(dispnum@i),w
  1410  02B4  3EFF               	addlw	0FFh
  1411  02B5  3E20               	addlw	_str&0ffh
  1412  02B6  0084               	movwf	fsr0
  1413  02B7  0864               	movf	(??_dispnum+0)+0,w
  1414  02B8  1383               	bcf	status, 7	;select IRP bank0
  1415  02B9  0080               	movwf	indf
  1416                           	line	239
  1417                           	
  1418  02BA                     l3134:	
  1419                           ;ADCLCD.C: 239: num /= 10 ;
  1420  02BA  300A               	movlw	low(0Ah)
  1421  02BB  00D3               	movwf	(?___lwdiv)
  1422  02BC  3000               	movlw	high(0Ah)
  1423  02BD  00D4               	movwf	((?___lwdiv))+1
  1424  02BE  085F               	movf	(dispnum@num+1),w
  1425  02BF  01D6               	clrf	1+(?___lwdiv)+02h
  1426  02C0  07D6               	addwf	1+(?___lwdiv)+02h
  1427  02C1  085E               	movf	(dispnum@num),w
  1428  02C2  01D5               	clrf	0+(?___lwdiv)+02h
  1429  02C3  07D5               	addwf	0+(?___lwdiv)+02h
  1430                           
  1431  02C4  120A  118A  2337   	fcall	___lwdiv
              120A  118A         
  1432  02C9  1283               	bcf	status, 5	;RP0=0, select bank0
  1433  02CA  1303               	bcf	status, 6	;RP1=0, select bank0
  1434  02CB  0854               	movf	(1+(?___lwdiv)),w
  1435  02CC  01DF               	clrf	(dispnum@num+1)
  1436  02CD  07DF               	addwf	(dispnum@num+1)
  1437  02CE  0853               	movf	(0+(?___lwdiv)),w
  1438  02CF  01DE               	clrf	(dispnum@num)
  1439  02D0  07DE               	addwf	(dispnum@num)
  1440                           
  1441                           	line	240
  1442                           	
  1443  02D1                     l684:	
  1444                           	line	232
  1445                           	
  1446  02D1                     l3136:	
  1447  02D1  3001               	movlw	low(01h)
  1448  02D2  02E6               	subwf	(dispnum@i),f
  1449                           	
  1450  02D3                     l681:	
  1451                           	
  1452  02D3                     l3138:	
  1453  02D3  0866               	movf	(dispnum@i),w
  1454  02D4  0660               	xorwf	(dispnum@stcol),w
  1455  02D5  1D03               	skipz
  1456  02D6  2AD8               	goto	u3561
  1457  02D7  2AD9               	goto	u3560
  1458  02D8                     u3561:
  1459  02D8  2A87               	goto	l682
  1460  02D9                     u3560:
  1461                           	
  1462  02D9                     l685:	
  1463                           	line	242
  1464                           	
  1465  02D9                     l3140:	
  1466                           ;ADCLCD.C: 240: }
  1467                           ;ADCLCD.C: 241: }
  1468                           ;ADCLCD.C: 242: display(addr) ;
  1469  02D9  0863               	movf	(dispnum@addr),w
  1470  02DA  120A  118A  2409   	fcall	_display
              120A  118A         
  1471                           	line	243
  1472                           	
  1473  02DF                     l686:	
  1474  02DF  0008               	return
  1475                           	opt stack 0
  1476                           GLOBAL	__end_of_dispnum
  1477  02E0                     	__end_of_dispnum:
  1478 ;; =============== function _dispnum ends ============
  1479                           
  1480                           	signat	_dispnum,20600
  1481                           	global	_dispstr
  1482                           psect	text618,local,class=CODE,delta=2
  1483                           global __ptext618
  1484  04BE                     __ptext618:
  1485                           
  1486 ;; *************** function _dispstr *****************
  1487 ;; Defined at:
  1488 ;;		line 219 in file "C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;  s               1    wreg     PTR const unsigned char 
  1491 ;;		 -> STR_2(19), STR_1(17), 
  1492 ;;  stcol           1   11[BANK0 ] unsigned char 
  1493 ;;  endcol          1   12[BANK0 ] unsigned char 
  1494 ;;  addr            1   13[BANK0 ] unsigned char 
  1495 ;; Auto vars:     Size  Location     Type
  1496 ;;  s               1   15[BANK0 ] PTR const unsigned char 
  1497 ;;		 -> STR_2(19), STR_1(17), 
  1498 ;;  i               1   16[BANK0 ] unsigned char 
  1499 ;; Return value:  Size  Location     Type
  1500 ;;		None               void
  1501 ;; Registers used:
  1502 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1503 ;; Tracked objects:
  1504 ;;		On entry : 0/0
  1505 ;;		On exit  : 0/0
  1506 ;;		Unchanged: 0/0
  1507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1508 ;;      Params:         0       3       0       0       0
  1509 ;;      Locals:         0       2       0       0       0
  1510 ;;      Temps:          0       1       0       0       0
  1511 ;;      Totals:         0       6       0       0       0
  1512 ;;Total ram usage:        6 bytes
  1513 ;; Hardware stack levels used:    1
  1514 ;; Hardware stack levels required when called:    5
  1515 ;; This function calls:
  1516 ;;		_display
  1517 ;; This function is called by:
  1518 ;;		_main
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           psect	text618
  1522                           	file	"C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  1523                           	line	219
  1524                           	global	__size_of_dispstr
  1525  003A                     	__size_of_dispstr	equ	__end_of_dispstr-_dispstr
  1526                           	
  1527  04BE                     _dispstr:	
  1528                           	opt	stack 7
  1529                           ; Regs used in _dispstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1530                           ;dispstr@s stored from wreg
  1531                           	line	221
  1532  04BE  1283               	bcf	status, 5	;RP0=0, select bank0
  1533  04BF  1303               	bcf	status, 6	;RP1=0, select bank0
  1534  04C0  00E2               	movwf	(dispstr@s)
  1535                           	
  1536  04C1                     l3110:	
  1537                           ;ADCLCD.C: 220: UCHAR i ;
  1538                           ;ADCLCD.C: 221: for(i = stcol ; i <= endcol ; i++ )
  1539  04C1  085E               	movf	(dispstr@stcol),w
  1540  04C2  00E1               	movwf	(??_dispstr+0)+0
  1541  04C3  0861               	movf	(??_dispstr+0)+0,w
  1542  04C4  00E3               	movwf	(dispstr@i)
  1543  04C5  2CEB               	goto	l674
  1544                           	line	222
  1545                           	
  1546  04C6                     l675:	
  1547                           	line	223
  1548                           	
  1549  04C6                     l3112:	
  1550                           ;ADCLCD.C: 222: {
  1551                           ;ADCLCD.C: 223: str[i] = *s++ ;
  1552  04C6  0862               	movf	(dispstr@s),w
  1553  04C7  0084               	movwf	fsr0
  1554  04C8  120A  118A  2013   	fcall	stringdir
              120A  118A         
  1555  04CD  00E1               	movwf	(??_dispstr+0)+0
  1556  04CE  0863               	movf	(dispstr@i),w
  1557  04CF  3E20               	addlw	_str&0ffh
  1558  04D0  0084               	movwf	fsr0
  1559  04D1  0861               	movf	(??_dispstr+0)+0,w
  1560  04D2  1383               	bcf	status, 7	;select IRP bank0
  1561  04D3  0080               	movwf	indf
  1562                           	
  1563  04D4                     l3114:	
  1564  04D4  3001               	movlw	(01h)
  1565  04D5  00E1               	movwf	(??_dispstr+0)+0
  1566  04D6  0861               	movf	(??_dispstr+0)+0,w
  1567  04D7  07E2               	addwf	(dispstr@s),f
  1568                           	line	224
  1569                           	
  1570  04D8                     l3116:	
  1571                           ;ADCLCD.C: 224: if(!(str[i])) str[i] = ' ' ;
  1572  04D8  0863               	movf	(dispstr@i),w
  1573  04D9  3E20               	addlw	_str&0ffh
  1574  04DA  0084               	movwf	fsr0
  1575  04DB  0880               	movf	indf,f
  1576  04DC  1D03               	skipz
  1577  04DD  2CDF               	goto	u3531
  1578  04DE  2CE0               	goto	u3530
  1579  04DF                     u3531:
  1580  04DF  2CE7               	goto	l676
  1581  04E0                     u3530:
  1582                           	
  1583  04E0                     l3118:	
  1584  04E0  3020               	movlw	(020h)
  1585  04E1  00E1               	movwf	(??_dispstr+0)+0
  1586  04E2  0863               	movf	(dispstr@i),w
  1587  04E3  3E20               	addlw	_str&0ffh
  1588  04E4  0084               	movwf	fsr0
  1589  04E5  0861               	movf	(??_dispstr+0)+0,w
  1590  04E6  0080               	movwf	indf
  1591                           	
  1592  04E7                     l676:	
  1593                           	line	221
  1594                           	
  1595  04E7                     l3120:	
  1596  04E7  3001               	movlw	(01h)
  1597  04E8  00E1               	movwf	(??_dispstr+0)+0
  1598  04E9  0861               	movf	(??_dispstr+0)+0,w
  1599  04EA  07E3               	addwf	(dispstr@i),f
  1600                           	
  1601  04EB                     l674:	
  1602                           	
  1603  04EB                     l3122:	
  1604  04EB  0863               	movf	(dispstr@i),w
  1605  04EC  025F               	subwf	(dispstr@endcol),w
  1606  04ED  1803               	skipnc
  1607  04EE  2CF0               	goto	u3541
  1608  04EF  2CF1               	goto	u3540
  1609  04F0                     u3541:
  1610  04F0  2CC6               	goto	l675
  1611  04F1                     u3540:
  1612                           	
  1613  04F1                     l677:	
  1614                           	line	226
  1615                           	
  1616  04F1                     l3124:	
  1617                           ;ADCLCD.C: 225: }
  1618                           ;ADCLCD.C: 226: display(addr);
  1619  04F1  0860               	movf	(dispstr@addr),w
  1620  04F2  120A  118A  2409   	fcall	_display
              120A  118A         
  1621                           	line	227
  1622                           	
  1623  04F7                     l678:	
  1624  04F7  0008               	return
  1625                           	opt stack 0
  1626                           GLOBAL	__end_of_dispstr
  1627  04F8                     	__end_of_dispstr:
  1628 ;; =============== function _dispstr ends ============
  1629                           
  1630                           	signat	_dispstr,16504
  1631                           	global	_LCD_Cursor
  1632                           psect	text619,local,class=CODE,delta=2
  1633                           global __ptext619
  1634  0585                     __ptext619:
  1635                           
  1636 ;; *************** function _LCD_Cursor *****************
  1637 ;; Defined at:
  1638 ;;		line 267 in file "C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  row             1    wreg     unsigned char 
  1641 ;;  column          1    8[BANK0 ] unsigned char 
  1642 ;; Auto vars:     Size  Location     Type
  1643 ;;  row             1   10[BANK0 ] unsigned char 
  1644 ;; Return value:  Size  Location     Type
  1645 ;;		None               void
  1646 ;; Registers used:
  1647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1648 ;; Tracked objects:
  1649 ;;		On entry : 0/0
  1650 ;;		On exit  : 0/0
  1651 ;;		Unchanged: 0/0
  1652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1653 ;;      Params:         0       1       0       0       0
  1654 ;;      Locals:         0       1       0       0       0
  1655 ;;      Temps:          0       1       0       0       0
  1656 ;;      Totals:         0       3       0       0       0
  1657 ;;Total ram usage:        3 bytes
  1658 ;; Hardware stack levels used:    1
  1659 ;; Hardware stack levels required when called:    4
  1660 ;; This function calls:
  1661 ;;		_write_lcd_command
  1662 ;; This function is called by:
  1663 ;;		_main
  1664 ;; This function uses a non-reentrant model
  1665 ;;
  1666                           psect	text619
  1667                           	file	"C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  1668                           	line	267
  1669                           	global	__size_of_LCD_Cursor
  1670  0029                     	__size_of_LCD_Cursor	equ	__end_of_LCD_Cursor-_LCD_Cursor
  1671                           	
  1672  0585                     _LCD_Cursor:	
  1673                           	opt	stack 7
  1674                           ; Regs used in _LCD_Cursor: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1675                           ;LCD_Cursor@row stored from wreg
  1676  0585  1283               	bcf	status, 5	;RP0=0, select bank0
  1677  0586  1303               	bcf	status, 6	;RP1=0, select bank0
  1678  0587  00DD               	movwf	(LCD_Cursor@row)
  1679                           	line	268
  1680                           	
  1681  0588                     l3096:	
  1682                           ;ADCLCD.C: 268: switch (row) {
  1683  0588  2DA3               	goto	l700
  1684                           	line	269
  1685                           ;ADCLCD.C: 269: case 1: lcd_dat=0x80+column-1; write_lcd_command (); break;
  1686                           	
  1687  0589                     l701:	
  1688                           	
  1689  0589                     l3098:	
  1690  0589  085B               	movf	(LCD_Cursor@column),w
  1691  058A  3E7F               	addlw	07Fh
  1692  058B  00DC               	movwf	(??_LCD_Cursor+0)+0
  1693  058C  085C               	movf	(??_LCD_Cursor+0)+0,w
  1694  058D  00EB               	movwf	(_lcd_dat)
  1695                           	
  1696  058E                     l3100:	
  1697  058E  120A  118A  2446   	fcall	_write_lcd_command
              120A  118A         
  1698  0593  2DAD               	goto	l702
  1699                           	line	270
  1700                           ;ADCLCD.C: 270: case 2: lcd_dat=0xc0+column-1; write_lcd_command (); break;
  1701                           	
  1702  0594                     l703:	
  1703                           	
  1704  0594                     l3102:	
  1705  0594  1283               	bcf	status, 5	;RP0=0, select bank0
  1706  0595  1303               	bcf	status, 6	;RP1=0, select bank0
  1707  0596  085B               	movf	(LCD_Cursor@column),w
  1708  0597  3EBF               	addlw	0BFh
  1709  0598  00DC               	movwf	(??_LCD_Cursor+0)+0
  1710  0599  085C               	movf	(??_LCD_Cursor+0)+0,w
  1711  059A  00EB               	movwf	(_lcd_dat)
  1712                           	
  1713  059B                     l3104:	
  1714  059B  120A  118A  2446   	fcall	_write_lcd_command
              120A  118A         
  1715  05A0  2DAD               	goto	l702
  1716                           	line	271
  1717                           ;ADCLCD.C: 271: default: break;
  1718                           	
  1719  05A1                     l704:	
  1720  05A1  2DAD               	goto	l702
  1721                           	line	272
  1722                           	
  1723  05A2                     l3106:	
  1724                           ;ADCLCD.C: 272: }
  1725  05A2  2DAD               	goto	l702
  1726                           	line	268
  1727                           	
  1728  05A3                     l700:	
  1729                           	
  1730  05A3                     l3108:	
  1731  05A3  1283               	bcf	status, 5	;RP0=0, select bank0
  1732  05A4  1303               	bcf	status, 6	;RP1=0, select bank0
  1733  05A5  085D               	movf	(LCD_Cursor@row),w
  1734                           	; Switch size 1, requested type "space"
  1735                           ; Number of cases is 2, Range of values is 1 to 2
  1736                           ; switch strategies available:
  1737                           ; Name         Bytes Cycles
  1738                           ; simple_byte     7     4 (average)
  1739                           ; direct_byte    28    22 (fixed)
  1740                           ;	Chosen strategy is simple_byte
  1741                           
  1742  05A6  3A01               	xorlw	1^0	; case 1
  1743  05A7  1903               	skipnz
  1744  05A8  2D89               	goto	l701
  1745  05A9  3A03               	xorlw	2^1	; case 2
  1746  05AA  1903               	skipnz
  1747  05AB  2D94               	goto	l703
  1748  05AC  2DA1               	goto	l704
  1749                           
  1750                           	line	272
  1751                           	
  1752  05AD                     l702:	
  1753                           	line	273
  1754                           	
  1755  05AD                     l705:	
  1756  05AD  0008               	return
  1757                           	opt stack 0
  1758                           GLOBAL	__end_of_LCD_Cursor
  1759  05AE                     	__end_of_LCD_Cursor:
  1760 ;; =============== function _LCD_Cursor ends ============
  1761                           
  1762                           	signat	_LCD_Cursor,8312
  1763                           	global	_display
  1764                           psect	text620,local,class=CODE,delta=2
  1765                           global __ptext620
  1766  0409                     __ptext620:
  1767                           
  1768 ;; *************** function _display *****************
  1769 ;; Defined at:
  1770 ;;		line 206 in file "C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;  addr            1    wreg     unsigned char 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  addr            1    9[BANK0 ] unsigned char 
  1775 ;;  k               1   10[BANK0 ] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;		None               void
  1778 ;; Registers used:
  1779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1785 ;;      Params:         0       0       0       0       0
  1786 ;;      Locals:         0       2       0       0       0
  1787 ;;      Temps:          0       1       0       0       0
  1788 ;;      Totals:         0       3       0       0       0
  1789 ;;Total ram usage:        3 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; Hardware stack levels required when called:    4
  1792 ;; This function calls:
  1793 ;;		_write_lcd_command
  1794 ;;		_write_lcd_data
  1795 ;;		_delay
  1796 ;; This function is called by:
  1797 ;;		_dispstr
  1798 ;;		_dispnum
  1799 ;;		_disp_clear
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           psect	text620
  1803                           	file	"C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  1804                           	line	206
  1805                           	global	__size_of_display
  1806  003D                     	__size_of_display	equ	__end_of_display-_display
  1807                           	
  1808  0409                     _display:	
  1809                           	opt	stack 6
  1810                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1811                           ;display@addr stored from wreg
  1812                           	line	208
  1813  0409  1283               	bcf	status, 5	;RP0=0, select bank0
  1814  040A  1303               	bcf	status, 6	;RP1=0, select bank0
  1815  040B  00DC               	movwf	(display@addr)
  1816                           	
  1817  040C                     l3076:	
  1818                           ;ADCLCD.C: 207: UCHAR k ;
  1819                           ;ADCLCD.C: 208: lcd_dat = addr ;
  1820  040C  085C               	movf	(display@addr),w
  1821  040D  00DB               	movwf	(??_display+0)+0
  1822  040E  085B               	movf	(??_display+0)+0,w
  1823  040F  00EB               	movwf	(_lcd_dat)
  1824                           	line	209
  1825                           	
  1826  0410                     l3078:	
  1827                           ;ADCLCD.C: 209: write_lcd_command() ;
  1828  0410  120A  118A  2446   	fcall	_write_lcd_command
              120A  118A         
  1829                           	line	210
  1830                           	
  1831  0415                     l3080:	
  1832                           ;ADCLCD.C: 210: for(k = 0 ; k <= 15 ; k++ )
  1833  0415  1003               	clrc
  1834  0416  3000               	movlw	0
  1835  0417  1803               	btfsc	status,0
  1836  0418  3001               	movlw	1
  1837  0419  1283               	bcf	status, 5	;RP0=0, select bank0
  1838  041A  1303               	bcf	status, 6	;RP1=0, select bank0
  1839  041B  00DD               	movwf	(display@k)
  1840                           	
  1841  041C                     l3082:	
  1842  041C  3010               	movlw	(010h)
  1843  041D  025D               	subwf	(display@k),w
  1844  041E  1C03               	skipc
  1845  041F  2C21               	goto	u3511
  1846  0420  2C22               	goto	u3510
  1847  0421                     u3511:
  1848  0421  2C23               	goto	l669
  1849  0422                     u3510:
  1850                           	
  1851  0422                     l3084:	
  1852  0422  2C3C               	goto	l670
  1853                           	line	211
  1854                           	
  1855  0423                     l669:	
  1856                           	line	212
  1857                           	
  1858  0423                     l3086:	
  1859                           ;ADCLCD.C: 211: {
  1860                           ;ADCLCD.C: 212: lcd_dat = str[k] ;
  1861  0423  085D               	movf	(display@k),w
  1862  0424  3E20               	addlw	_str&0ffh
  1863  0425  0084               	movwf	fsr0
  1864  0426  1383               	bcf	status, 7	;select IRP bank0
  1865  0427  0800               	movf	indf,w
  1866  0428  00DB               	movwf	(??_display+0)+0
  1867  0429  085B               	movf	(??_display+0)+0,w
  1868  042A  00EB               	movwf	(_lcd_dat)
  1869                           	line	213
  1870                           	
  1871  042B                     l3088:	
  1872                           ;ADCLCD.C: 213: write_lcd_data() ;
  1873  042B  120A  118A  255B   	fcall	_write_lcd_data
              120A  118A         
  1874                           	line	210
  1875                           	
  1876  0430                     l3090:	
  1877  0430  3001               	movlw	(01h)
  1878  0431  1283               	bcf	status, 5	;RP0=0, select bank0
  1879  0432  1303               	bcf	status, 6	;RP1=0, select bank0
  1880  0433  00DB               	movwf	(??_display+0)+0
  1881  0434  085B               	movf	(??_display+0)+0,w
  1882  0435  07DD               	addwf	(display@k),f
  1883                           	
  1884  0436                     l3092:	
  1885  0436  3010               	movlw	(010h)
  1886  0437  025D               	subwf	(display@k),w
  1887  0438  1C03               	skipc
  1888  0439  2C3B               	goto	u3521
  1889  043A  2C3C               	goto	u3520
  1890  043B                     u3521:
  1891  043B  2C23               	goto	l669
  1892  043C                     u3520:
  1893                           	
  1894  043C                     l670:	
  1895                           	line	215
  1896                           	
  1897  043C                     l3094:	
  1898                           ;ADCLCD.C: 214: }
  1899                           ;ADCLCD.C: 215: delay(1) ;
  1900  043C  3001               	movlw	low(01h)
  1901  043D  00D3               	movwf	(?_delay)
  1902  043E  3000               	movlw	high(01h)
  1903  043F  00D4               	movwf	((?_delay))+1
  1904  0440  120A  118A  25D0   	fcall	_delay
              120A  118A         
  1905                           	line	216
  1906                           	
  1907  0445                     l671:	
  1908  0445  0008               	return
  1909                           	opt stack 0
  1910                           GLOBAL	__end_of_display
  1911  0446                     	__end_of_display:
  1912 ;; =============== function _display ends ============
  1913                           
  1914                           	signat	_display,4216
  1915                           	global	_initlcd
  1916                           psect	text621,local,class=CODE,delta=2
  1917                           global __ptext621
  1918  0142                     __ptext621:
  1919                           
  1920 ;; *************** function _initlcd *****************
  1921 ;; Defined at:
  1922 ;;		line 172 in file "C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;		None
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;		None
  1927 ;; Return value:  Size  Location     Type
  1928 ;;		None               void
  1929 ;; Registers used:
  1930 ;;		wreg, status,2, status,0, pclath, cstack
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1936 ;;      Params:         0       0       0       0       0
  1937 ;;      Locals:         0       0       0       0       0
  1938 ;;      Temps:          0       1       0       0       0
  1939 ;;      Totals:         0       1       0       0       0
  1940 ;;Total ram usage:        1 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    4
  1943 ;; This function calls:
  1944 ;;		_write_lcd_command
  1945 ;;		_delay
  1946 ;; This function is called by:
  1947 ;;		_main
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           psect	text621
  1951                           	file	"C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  1952                           	line	172
  1953                           	global	__size_of_initlcd
  1954  00B1                     	__size_of_initlcd	equ	__end_of_initlcd-_initlcd
  1955                           	
  1956  0142                     _initlcd:	
  1957                           	opt	stack 7
  1958                           ; Regs used in _initlcd: [wreg+status,2+status,0+pclath+cstack]
  1959                           	line	174
  1960                           	
  1961  0142                     l3042:	
  1962                           ;ADCLCD.C: 174: lcd_dat = 0x03 ; write_lcd_command() ;
  1963  0142  3003               	movlw	(03h)
  1964  0143  1283               	bcf	status, 5	;RP0=0, select bank0
  1965  0144  1303               	bcf	status, 6	;RP1=0, select bank0
  1966  0145  00DB               	movwf	(??_initlcd+0)+0
  1967  0146  085B               	movf	(??_initlcd+0)+0,w
  1968  0147  00EB               	movwf	(_lcd_dat)
  1969                           	
  1970  0148                     l3044:	
  1971  0148  120A  118A  2446   	fcall	_write_lcd_command
              120A  118A         
  1972                           	line	175
  1973                           	
  1974  014D                     l3046:	
  1975                           ;ADCLCD.C: 175: delay(16) ;
  1976  014D  3010               	movlw	low(010h)
  1977  014E  1283               	bcf	status, 5	;RP0=0, select bank0
  1978  014F  1303               	bcf	status, 6	;RP1=0, select bank0
  1979  0150  00D3               	movwf	(?_delay)
  1980  0151  3000               	movlw	high(010h)
  1981  0152  00D4               	movwf	((?_delay))+1
  1982  0153  120A  118A  25D0   	fcall	_delay
              120A  118A         
  1983                           	line	176
  1984                           ;ADCLCD.C: 176: lcd_dat = 0x03 ; write_lcd_command() ;
  1985  0158  3003               	movlw	(03h)
  1986  0159  1283               	bcf	status, 5	;RP0=0, select bank0
  1987  015A  1303               	bcf	status, 6	;RP1=0, select bank0
  1988  015B  00DB               	movwf	(??_initlcd+0)+0
  1989  015C  085B               	movf	(??_initlcd+0)+0,w
  1990  015D  00EB               	movwf	(_lcd_dat)
  1991                           	
  1992  015E                     l3048:	
  1993  015E  120A  118A  2446   	fcall	_write_lcd_command
              120A  118A         
  1994                           	line	177
  1995                           	
  1996  0163                     l3050:	
  1997                           ;ADCLCD.C: 177: delay(16) ;
  1998  0163  3010               	movlw	low(010h)
  1999  0164  1283               	bcf	status, 5	;RP0=0, select bank0
  2000  0165  1303               	bcf	status, 6	;RP1=0, select bank0
  2001  0166  00D3               	movwf	(?_delay)
  2002  0167  3000               	movlw	high(010h)
  2003  0168  00D4               	movwf	((?_delay))+1
  2004  0169  120A  118A  25D0   	fcall	_delay
              120A  118A         
  2005                           	line	178
  2006                           ;ADCLCD.C: 178: lcd_dat = 0x03 ; write_lcd_command() ;
  2007  016E  3003               	movlw	(03h)
  2008  016F  1283               	bcf	status, 5	;RP0=0, select bank0
  2009  0170  1303               	bcf	status, 6	;RP1=0, select bank0
  2010  0171  00DB               	movwf	(??_initlcd+0)+0
  2011  0172  085B               	movf	(??_initlcd+0)+0,w
  2012  0173  00EB               	movwf	(_lcd_dat)
  2013                           	
  2014  0174                     l3052:	
  2015  0174  120A  118A  2446   	fcall	_write_lcd_command
              120A  118A         
  2016                           	line	179
  2017                           	
  2018  0179                     l3054:	
  2019                           ;ADCLCD.C: 179: delay(16);
  2020  0179  3010               	movlw	low(010h)
  2021  017A  1283               	bcf	status, 5	;RP0=0, select bank0
  2022  017B  1303               	bcf	status, 6	;RP1=0, select bank0
  2023  017C  00D3               	movwf	(?_delay)
  2024  017D  3000               	movlw	high(010h)
  2025  017E  00D4               	movwf	((?_delay))+1
  2026  017F  120A  118A  25D0   	fcall	_delay
              120A  118A         
  2027                           	line	180
  2028                           ;ADCLCD.C: 180: lcd_dat = 0x02; write_lcd_command() ;
  2029  0184  3002               	movlw	(02h)
  2030  0185  1283               	bcf	status, 5	;RP0=0, select bank0
  2031  0186  1303               	bcf	status, 6	;RP1=0, select bank0
  2032  0187  00DB               	movwf	(??_initlcd+0)+0
  2033  0188  085B               	movf	(??_initlcd+0)+0,w
  2034  0189  00EB               	movwf	(_lcd_dat)
  2035                           	
  2036  018A                     l3056:	
  2037  018A  120A  118A  2446   	fcall	_write_lcd_command
              120A  118A         
  2038                           	line	181
  2039                           	
  2040  018F                     l3058:	
  2041                           ;ADCLCD.C: 181: delay(16);
  2042  018F  3010               	movlw	low(010h)
  2043  0190  1283               	bcf	status, 5	;RP0=0, select bank0
  2044  0191  1303               	bcf	status, 6	;RP1=0, select bank0
  2045  0192  00D3               	movwf	(?_delay)
  2046  0193  3000               	movlw	high(010h)
  2047  0194  00D4               	movwf	((?_delay))+1
  2048  0195  120A  118A  25D0   	fcall	_delay
              120A  118A         
  2049                           	line	182
  2050                           ;ADCLCD.C: 182: lcd_dat = 0x28 ; write_lcd_command() ;
  2051  019A  3028               	movlw	(028h)
  2052  019B  1283               	bcf	status, 5	;RP0=0, select bank0
  2053  019C  1303               	bcf	status, 6	;RP1=0, select bank0
  2054  019D  00DB               	movwf	(??_initlcd+0)+0
  2055  019E  085B               	movf	(??_initlcd+0)+0,w
  2056  019F  00EB               	movwf	(_lcd_dat)
  2057                           	
  2058  01A0                     l3060:	
  2059  01A0  120A  118A  2446   	fcall	_write_lcd_command
              120A  118A         
  2060                           	line	183
  2061                           	
  2062  01A5                     l3062:	
  2063                           ;ADCLCD.C: 183: delay(16) ;
  2064  01A5  3010               	movlw	low(010h)
  2065  01A6  1283               	bcf	status, 5	;RP0=0, select bank0
  2066  01A7  1303               	bcf	status, 6	;RP1=0, select bank0
  2067  01A8  00D3               	movwf	(?_delay)
  2068  01A9  3000               	movlw	high(010h)
  2069  01AA  00D4               	movwf	((?_delay))+1
  2070  01AB  120A  118A  25D0   	fcall	_delay
              120A  118A         
  2071                           	line	184
  2072                           ;ADCLCD.C: 184: lcd_dat = 0x08 ; write_lcd_command() ;
  2073  01B0  3008               	movlw	(08h)
  2074  01B1  1283               	bcf	status, 5	;RP0=0, select bank0
  2075  01B2  1303               	bcf	status, 6	;RP1=0, select bank0
  2076  01B3  00DB               	movwf	(??_initlcd+0)+0
  2077  01B4  085B               	movf	(??_initlcd+0)+0,w
  2078  01B5  00EB               	movwf	(_lcd_dat)
  2079                           	
  2080  01B6                     l3064:	
  2081  01B6  120A  118A  2446   	fcall	_write_lcd_command
              120A  118A         
  2082                           	line	185
  2083                           	
  2084  01BB                     l3066:	
  2085                           ;ADCLCD.C: 185: delay(16) ;
  2086  01BB  3010               	movlw	low(010h)
  2087  01BC  1283               	bcf	status, 5	;RP0=0, select bank0
  2088  01BD  1303               	bcf	status, 6	;RP1=0, select bank0
  2089  01BE  00D3               	movwf	(?_delay)
  2090  01BF  3000               	movlw	high(010h)
  2091  01C0  00D4               	movwf	((?_delay))+1
  2092  01C1  120A  118A  25D0   	fcall	_delay
              120A  118A         
  2093                           	line	186
  2094                           ;ADCLCD.C: 186: lcd_dat = 0x0c ; write_lcd_command() ;
  2095  01C6  300C               	movlw	(0Ch)
  2096  01C7  1283               	bcf	status, 5	;RP0=0, select bank0
  2097  01C8  1303               	bcf	status, 6	;RP1=0, select bank0
  2098  01C9  00DB               	movwf	(??_initlcd+0)+0
  2099  01CA  085B               	movf	(??_initlcd+0)+0,w
  2100  01CB  00EB               	movwf	(_lcd_dat)
  2101                           	
  2102  01CC                     l3068:	
  2103  01CC  120A  118A  2446   	fcall	_write_lcd_command
              120A  118A         
  2104                           	line	187
  2105                           	
  2106  01D1                     l3070:	
  2107                           ;ADCLCD.C: 187: delay(4) ;
  2108  01D1  3004               	movlw	low(04h)
  2109  01D2  1283               	bcf	status, 5	;RP0=0, select bank0
  2110  01D3  1303               	bcf	status, 6	;RP1=0, select bank0
  2111  01D4  00D3               	movwf	(?_delay)
  2112  01D5  3000               	movlw	high(04h)
  2113  01D6  00D4               	movwf	((?_delay))+1
  2114  01D7  120A  118A  25D0   	fcall	_delay
              120A  118A         
  2115                           	line	188
  2116                           ;ADCLCD.C: 188: lcd_dat = 0x06 ; write_lcd_command() ;
  2117  01DC  3006               	movlw	(06h)
  2118  01DD  1283               	bcf	status, 5	;RP0=0, select bank0
  2119  01DE  1303               	bcf	status, 6	;RP1=0, select bank0
  2120  01DF  00DB               	movwf	(??_initlcd+0)+0
  2121  01E0  085B               	movf	(??_initlcd+0)+0,w
  2122  01E1  00EB               	movwf	(_lcd_dat)
  2123                           	
  2124  01E2                     l3072:	
  2125  01E2  120A  118A  2446   	fcall	_write_lcd_command
              120A  118A         
  2126                           	line	189
  2127                           	
  2128  01E7                     l3074:	
  2129                           ;ADCLCD.C: 189: delay(4) ;
  2130  01E7  3004               	movlw	low(04h)
  2131  01E8  1283               	bcf	status, 5	;RP0=0, select bank0
  2132  01E9  1303               	bcf	status, 6	;RP1=0, select bank0
  2133  01EA  00D3               	movwf	(?_delay)
  2134  01EB  3000               	movlw	high(04h)
  2135  01EC  00D4               	movwf	((?_delay))+1
  2136  01ED  120A  118A  25D0   	fcall	_delay
              120A  118A         
  2137                           	line	190
  2138                           	
  2139  01F2                     l660:	
  2140  01F2  0008               	return
  2141                           	opt stack 0
  2142                           GLOBAL	__end_of_initlcd
  2143  01F3                     	__end_of_initlcd:
  2144 ;; =============== function _initlcd ends ============
  2145                           
  2146                           	signat	_initlcd,88
  2147                           	global	_write_lcd_data
  2148                           psect	text622,local,class=CODE,delta=2
  2149                           global __ptext622
  2150  055B                     __ptext622:
  2151                           
  2152 ;; *************** function _write_lcd_data *****************
  2153 ;; Defined at:
  2154 ;;		line 159 in file "C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;		None
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  byte            1    7[BANK0 ] unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;		None               void
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0, pclath, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2168 ;;      Params:         0       0       0       0       0
  2169 ;;      Locals:         0       1       0       0       0
  2170 ;;      Temps:          0       1       0       0       0
  2171 ;;      Totals:         0       2       0       0       0
  2172 ;;Total ram usage:        2 bytes
  2173 ;; Hardware stack levels used:    1
  2174 ;; Hardware stack levels required when called:    3
  2175 ;; This function calls:
  2176 ;;		_send_nibble2lcd
  2177 ;; This function is called by:
  2178 ;;		_display
  2179 ;;		_LCD_DisplayChar
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           psect	text622
  2183                           	file	"C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  2184                           	line	159
  2185                           	global	__size_of_write_lcd_data
  2186  002A                     	__size_of_write_lcd_data	equ	__end_of_write_lcd_data-_write_lcd_data
  2187                           	
  2188  055B                     _write_lcd_data:	
  2189                           	opt	stack 5
  2190                           ; Regs used in _write_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  2191                           	line	161
  2192                           	
  2193  055B                     l3036:	
  2194                           ;ADCLCD.C: 160: unsigned char byte;
  2195                           ;ADCLCD.C: 161: byte=lcd_dat;
  2196  055B  1283               	bcf	status, 5	;RP0=0, select bank0
  2197  055C  1303               	bcf	status, 6	;RP1=0, select bank0
  2198  055D  086B               	movf	(_lcd_dat),w
  2199  055E  00D9               	movwf	(??_write_lcd_data+0)+0
  2200  055F  0859               	movf	(??_write_lcd_data+0)+0,w
  2201  0560  00DA               	movwf	(write_lcd_data@byte)
  2202                           	line	163
  2203                           	
  2204  0561                     l3038:	
  2205                           ;ADCLCD.C: 163: send_nibble2lcd(((byte & 0xf0)), 0) ;
  2206  0561  1003               	clrc
  2207  0562  3000               	movlw	0
  2208  0563  1803               	btfsc	status,0
  2209  0564  3001               	movlw	1
  2210  0565  00D7               	movwf	(?_send_nibble2lcd)
  2211  0566  085A               	movf	(write_lcd_data@byte),w
  2212  0567  39F0               	andlw	0F0h
  2213  0568  120A  118A  24F8   	fcall	_send_nibble2lcd
              120A  118A         
  2214                           	line	164
  2215                           	
  2216  056D                     l3040:	
  2217                           ;ADCLCD.C: 164: send_nibble2lcd(((byte & 0x0F)<<4), 0) ;
  2218  056D  1003               	clrc
  2219  056E  3000               	movlw	0
  2220  056F  1803               	btfsc	status,0
  2221  0570  3001               	movlw	1
  2222  0571  1283               	bcf	status, 5	;RP0=0, select bank0
  2223  0572  1303               	bcf	status, 6	;RP1=0, select bank0
  2224  0573  00D7               	movwf	(?_send_nibble2lcd)
  2225  0574  085A               	movf	(write_lcd_data@byte),w
  2226  0575  390F               	andlw	0Fh
  2227  0576  00D9               	movwf	(??_write_lcd_data+0)+0
  2228  0577  3003               	movlw	(04h)-1
  2229  0578                     u3505:
  2230  0578  1003               	clrc
  2231  0579  0DD9               	rlf	(??_write_lcd_data+0)+0,f
  2232  057A  3EFF               	addlw	-1
  2233  057B  1D03               	skipz
  2234  057C  2D78               	goto	u3505
  2235  057D  1003               	clrc
  2236  057E  0D59               	rlf	(??_write_lcd_data+0)+0,w
  2237  057F  120A  118A  24F8   	fcall	_send_nibble2lcd
              120A  118A         
  2238                           	line	170
  2239                           	
  2240  0584                     l657:	
  2241  0584  0008               	return
  2242                           	opt stack 0
  2243                           GLOBAL	__end_of_write_lcd_data
  2244  0585                     	__end_of_write_lcd_data:
  2245 ;; =============== function _write_lcd_data ends ============
  2246                           
  2247                           	signat	_write_lcd_data,88
  2248                           	global	_write_lcd_command
  2249                           psect	text623,local,class=CODE,delta=2
  2250                           global __ptext623
  2251  0446                     __ptext623:
  2252                           
  2253 ;; *************** function _write_lcd_command *****************
  2254 ;; Defined at:
  2255 ;;		line 142 in file "C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;		None
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  byte            1    7[BANK0 ] unsigned char 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;		None               void
  2262 ;; Registers used:
  2263 ;;		wreg, status,2, status,0, pclath, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2269 ;;      Params:         0       0       0       0       0
  2270 ;;      Locals:         0       1       0       0       0
  2271 ;;      Temps:          0       1       0       0       0
  2272 ;;      Totals:         0       2       0       0       0
  2273 ;;Total ram usage:        2 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    3
  2276 ;; This function calls:
  2277 ;;		_send_nibble2lcd
  2278 ;;		_delay
  2279 ;; This function is called by:
  2280 ;;		_initlcd
  2281 ;;		_display
  2282 ;;		_LCD_Cursor
  2283 ;;		_LCD_CursorOn
  2284 ;;		_LCD_CursorOff
  2285 ;;		_LCD_Clear
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           psect	text623
  2289                           	file	"C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  2290                           	line	142
  2291                           	global	__size_of_write_lcd_command
  2292  003C                     	__size_of_write_lcd_command	equ	__end_of_write_lcd_command-_write_lcd_command
  2293                           	
  2294  0446                     _write_lcd_command:	
  2295                           	opt	stack 5
  2296                           ; Regs used in _write_lcd_command: [wreg+status,2+status,0+pclath+cstack]
  2297                           	line	144
  2298                           	
  2299  0446                     l3026:	
  2300                           ;ADCLCD.C: 143: unsigned char byte;
  2301                           ;ADCLCD.C: 144: byte=lcd_dat;
  2302  0446  1283               	bcf	status, 5	;RP0=0, select bank0
  2303  0447  1303               	bcf	status, 6	;RP1=0, select bank0
  2304  0448  086B               	movf	(_lcd_dat),w
  2305  0449  00D9               	movwf	(??_write_lcd_command+0)+0
  2306  044A  0859               	movf	(??_write_lcd_command+0)+0,w
  2307  044B  00DA               	movwf	(write_lcd_command@byte)
  2308                           	line	146
  2309                           	
  2310  044C                     l3028:	
  2311                           ;ADCLCD.C: 146: send_nibble2lcd(((byte & 0xf0)), 1) ;
  2312  044C  01D7               	clrf	(?_send_nibble2lcd)
  2313  044D  1403               	bsf	status,0
  2314  044E  0DD7               	rlf	(?_send_nibble2lcd),f
  2315  044F  085A               	movf	(write_lcd_command@byte),w
  2316  0450  39F0               	andlw	0F0h
  2317  0451  120A  118A  24F8   	fcall	_send_nibble2lcd
              120A  118A         
  2318                           	line	147
  2319                           	
  2320  0456                     l3030:	
  2321                           ;ADCLCD.C: 147: delay(10) ;
  2322  0456  300A               	movlw	low(0Ah)
  2323  0457  1283               	bcf	status, 5	;RP0=0, select bank0
  2324  0458  1303               	bcf	status, 6	;RP1=0, select bank0
  2325  0459  00D3               	movwf	(?_delay)
  2326  045A  3000               	movlw	high(0Ah)
  2327  045B  00D4               	movwf	((?_delay))+1
  2328  045C  120A  118A  25D0   	fcall	_delay
              120A  118A         
  2329                           	line	148
  2330                           	
  2331  0461                     l3032:	
  2332                           ;ADCLCD.C: 148: send_nibble2lcd(((byte & 0x0F)<<4), 1) ;
  2333  0461  1283               	bcf	status, 5	;RP0=0, select bank0
  2334  0462  1303               	bcf	status, 6	;RP1=0, select bank0
  2335  0463  01D7               	clrf	(?_send_nibble2lcd)
  2336  0464  1403               	bsf	status,0
  2337  0465  0DD7               	rlf	(?_send_nibble2lcd),f
  2338  0466  085A               	movf	(write_lcd_command@byte),w
  2339  0467  390F               	andlw	0Fh
  2340  0468  00D9               	movwf	(??_write_lcd_command+0)+0
  2341  0469  3003               	movlw	(04h)-1
  2342  046A                     u3495:
  2343  046A  1003               	clrc
  2344  046B  0DD9               	rlf	(??_write_lcd_command+0)+0,f
  2345  046C  3EFF               	addlw	-1
  2346  046D  1D03               	skipz
  2347  046E  2C6A               	goto	u3495
  2348  046F  1003               	clrc
  2349  0470  0D59               	rlf	(??_write_lcd_command+0)+0,w
  2350  0471  120A  118A  24F8   	fcall	_send_nibble2lcd
              120A  118A         
  2351                           	line	149
  2352                           	
  2353  0476                     l3034:	
  2354                           ;ADCLCD.C: 149: delay(10);
  2355  0476  300A               	movlw	low(0Ah)
  2356  0477  1283               	bcf	status, 5	;RP0=0, select bank0
  2357  0478  1303               	bcf	status, 6	;RP1=0, select bank0
  2358  0479  00D3               	movwf	(?_delay)
  2359  047A  3000               	movlw	high(0Ah)
  2360  047B  00D4               	movwf	((?_delay))+1
  2361  047C  120A  118A  25D0   	fcall	_delay
              120A  118A         
  2362                           	line	157
  2363                           	
  2364  0481                     l654:	
  2365  0481  0008               	return
  2366                           	opt stack 0
  2367                           GLOBAL	__end_of_write_lcd_command
  2368  0482                     	__end_of_write_lcd_command:
  2369 ;; =============== function _write_lcd_command ends ============
  2370                           
  2371                           	signat	_write_lcd_command,88
  2372                           	global	_channel_Sel
  2373                           psect	text624,local,class=CODE,delta=2
  2374                           global __ptext624
  2375  02E0                     __ptext624:
  2376                           
  2377 ;; *************** function _channel_Sel *****************
  2378 ;; Defined at:
  2379 ;;		line 282 in file "C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  channel         1    wreg     unsigned char 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  channel         1    4[BANK0 ] unsigned char 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;		None               void
  2386 ;; Registers used:
  2387 ;;		wreg, status,2, status,0, pclath, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2393 ;;      Params:         0       0       0       0       0
  2394 ;;      Locals:         0       1       0       0       0
  2395 ;;      Temps:          0       0       0       0       0
  2396 ;;      Totals:         0       1       0       0       0
  2397 ;;Total ram usage:        1 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; Hardware stack levels required when called:    2
  2400 ;; This function calls:
  2401 ;;		_delay
  2402 ;; This function is called by:
  2403 ;;		_main
  2404 ;; This function uses a non-reentrant model
  2405 ;;
  2406                           psect	text624
  2407                           	file	"C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  2408                           	line	282
  2409                           	global	__size_of_channel_Sel
  2410  0057                     	__size_of_channel_Sel	equ	__end_of_channel_Sel-_channel_Sel
  2411                           	
  2412  02E0                     _channel_Sel:	
  2413                           	opt	stack 7
  2414                           ; Regs used in _channel_Sel: [wreg+status,2+status,0+pclath+cstack]
  2415                           ;channel_Sel@channel stored from wreg
  2416  02E0  1283               	bcf	status, 5	;RP0=0, select bank0
  2417  02E1  1303               	bcf	status, 6	;RP1=0, select bank0
  2418  02E2  00D7               	movwf	(channel_Sel@channel)
  2419                           	line	283
  2420                           	
  2421  02E3                     l2988:	
  2422                           ;ADCLCD.C: 283: adcflag=0;
  2423  02E3  10FB               	bcf	(_adcflag/8),(_adcflag)&7
  2424                           	line	284
  2425                           	
  2426  02E4                     l2990:	
  2427                           ;ADCLCD.C: 284: if(channel==0)
  2428  02E4  08D7               	movf	(channel_Sel@channel),f
  2429  02E5  1D03               	skipz
  2430  02E6  2AE8               	goto	u3411
  2431  02E7  2AE9               	goto	u3410
  2432  02E8                     u3411:
  2433  02E8  2AEC               	goto	l711
  2434  02E9                     u3410:
  2435                           	line	285
  2436                           	
  2437  02E9                     l2992:	
  2438                           ;ADCLCD.C: 285: ADCON0 = 0x81 ;
  2439  02E9  3081               	movlw	(081h)
  2440  02EA  009F               	movwf	(31)	;volatile
  2441  02EB  2B2A               	goto	l712
  2442                           	line	286
  2443                           	
  2444  02EC                     l711:	
  2445                           	
  2446  02EC                     l2994:	
  2447                           ;ADCLCD.C: 286: else if(channel==1)
  2448  02EC  0857               	movf	(channel_Sel@channel),w
  2449  02ED  3A01               	xorlw	01h
  2450  02EE  1D03               	skipz
  2451  02EF  2AF1               	goto	u3421
  2452  02F0  2AF2               	goto	u3420
  2453  02F1                     u3421:
  2454  02F1  2AF5               	goto	l713
  2455  02F2                     u3420:
  2456                           	line	287
  2457                           	
  2458  02F2                     l2996:	
  2459                           ;ADCLCD.C: 287: ADCON0 = 0x89 ;
  2460  02F2  3089               	movlw	(089h)
  2461  02F3  009F               	movwf	(31)	;volatile
  2462  02F4  2B2A               	goto	l714
  2463                           	line	288
  2464                           	
  2465  02F5                     l713:	
  2466                           	
  2467  02F5                     l2998:	
  2468                           ;ADCLCD.C: 288: else if(channel==2)
  2469  02F5  0857               	movf	(channel_Sel@channel),w
  2470  02F6  3A02               	xorlw	02h
  2471  02F7  1D03               	skipz
  2472  02F8  2AFA               	goto	u3431
  2473  02F9  2AFB               	goto	u3430
  2474  02FA                     u3431:
  2475  02FA  2AFE               	goto	l715
  2476  02FB                     u3430:
  2477                           	line	289
  2478                           	
  2479  02FB                     l3000:	
  2480                           ;ADCLCD.C: 289: ADCON0 = 0x91 ;
  2481  02FB  3091               	movlw	(091h)
  2482  02FC  009F               	movwf	(31)	;volatile
  2483  02FD  2B2A               	goto	l716
  2484                           	line	290
  2485                           	
  2486  02FE                     l715:	
  2487                           	
  2488  02FE                     l3002:	
  2489                           ;ADCLCD.C: 290: else if(channel==3)
  2490  02FE  0857               	movf	(channel_Sel@channel),w
  2491  02FF  3A03               	xorlw	03h
  2492  0300  1D03               	skipz
  2493  0301  2B03               	goto	u3441
  2494  0302  2B04               	goto	u3440
  2495  0303                     u3441:
  2496  0303  2B07               	goto	l717
  2497  0304                     u3440:
  2498                           	line	291
  2499                           	
  2500  0304                     l3004:	
  2501                           ;ADCLCD.C: 291: ADCON0 = 0x99 ;
  2502  0304  3099               	movlw	(099h)
  2503  0305  009F               	movwf	(31)	;volatile
  2504  0306  2B2A               	goto	l718
  2505                           	line	292
  2506                           	
  2507  0307                     l717:	
  2508                           	
  2509  0307                     l3006:	
  2510                           ;ADCLCD.C: 292: else if(channel==4)
  2511  0307  0857               	movf	(channel_Sel@channel),w
  2512  0308  3A04               	xorlw	04h
  2513  0309  1D03               	skipz
  2514  030A  2B0C               	goto	u3451
  2515  030B  2B0D               	goto	u3450
  2516  030C                     u3451:
  2517  030C  2B10               	goto	l719
  2518  030D                     u3450:
  2519                           	line	293
  2520                           	
  2521  030D                     l3008:	
  2522                           ;ADCLCD.C: 293: ADCON0 = 0xa1 ;
  2523  030D  30A1               	movlw	(0A1h)
  2524  030E  009F               	movwf	(31)	;volatile
  2525  030F  2B2A               	goto	l720
  2526                           	line	294
  2527                           	
  2528  0310                     l719:	
  2529                           	
  2530  0310                     l3010:	
  2531                           ;ADCLCD.C: 294: else if(channel==5)
  2532  0310  0857               	movf	(channel_Sel@channel),w
  2533  0311  3A05               	xorlw	05h
  2534  0312  1D03               	skipz
  2535  0313  2B15               	goto	u3461
  2536  0314  2B16               	goto	u3460
  2537  0315                     u3461:
  2538  0315  2B19               	goto	l721
  2539  0316                     u3460:
  2540                           	line	295
  2541                           	
  2542  0316                     l3012:	
  2543                           ;ADCLCD.C: 295: ADCON0 = 0xa9 ;
  2544  0316  30A9               	movlw	(0A9h)
  2545  0317  009F               	movwf	(31)	;volatile
  2546  0318  2B2A               	goto	l722
  2547                           	line	296
  2548                           	
  2549  0319                     l721:	
  2550                           	
  2551  0319                     l3014:	
  2552                           ;ADCLCD.C: 296: else if(channel==6)
  2553  0319  0857               	movf	(channel_Sel@channel),w
  2554  031A  3A06               	xorlw	06h
  2555  031B  1D03               	skipz
  2556  031C  2B1E               	goto	u3471
  2557  031D  2B1F               	goto	u3470
  2558  031E                     u3471:
  2559  031E  2B22               	goto	l723
  2560  031F                     u3470:
  2561                           	line	297
  2562                           	
  2563  031F                     l3016:	
  2564                           ;ADCLCD.C: 297: ADCON0 = 0xb1 ;
  2565  031F  30B1               	movlw	(0B1h)
  2566  0320  009F               	movwf	(31)	;volatile
  2567  0321  2B2A               	goto	l724
  2568                           	line	298
  2569                           	
  2570  0322                     l723:	
  2571                           	
  2572  0322                     l3018:	
  2573                           ;ADCLCD.C: 298: else if(channel==7)
  2574  0322  0857               	movf	(channel_Sel@channel),w
  2575  0323  3A07               	xorlw	07h
  2576  0324  1D03               	skipz
  2577  0325  2B27               	goto	u3481
  2578  0326  2B28               	goto	u3480
  2579  0327                     u3481:
  2580  0327  2B2A               	goto	l725
  2581  0328                     u3480:
  2582                           	line	299
  2583                           	
  2584  0328                     l3020:	
  2585                           ;ADCLCD.C: 299: ADCON0 = 0xb9 ;
  2586  0328  30B9               	movlw	(0B9h)
  2587  0329  009F               	movwf	(31)	;volatile
  2588                           	
  2589  032A                     l725:	
  2590                           	line	300
  2591                           	
  2592  032A                     l724:	
  2593                           	
  2594  032A                     l722:	
  2595                           	
  2596  032A                     l720:	
  2597                           	
  2598  032A                     l718:	
  2599                           	
  2600  032A                     l716:	
  2601                           	
  2602  032A                     l714:	
  2603                           	
  2604  032A                     l712:	
  2605                           	
  2606  032A                     l3022:	
  2607                           ;ADCLCD.C: 300: delay(5);
  2608  032A  3005               	movlw	low(05h)
  2609  032B  00D3               	movwf	(?_delay)
  2610  032C  3000               	movlw	high(05h)
  2611  032D  00D4               	movwf	((?_delay))+1
  2612  032E  120A  118A  25D0   	fcall	_delay
              120A  118A         
  2613                           	line	301
  2614                           	
  2615  0333                     l3024:	
  2616                           ;ADCLCD.C: 301: ADGO=1;
  2617  0333  1283               	bcf	status, 5	;RP0=0, select bank0
  2618  0334  1303               	bcf	status, 6	;RP1=0, select bank0
  2619  0335  151F               	bsf	(250/8),(250)&7
  2620                           	line	302
  2621                           	
  2622  0336                     l726:	
  2623  0336  0008               	return
  2624                           	opt stack 0
  2625                           GLOBAL	__end_of_channel_Sel
  2626  0337                     	__end_of_channel_Sel:
  2627 ;; =============== function _channel_Sel ends ============
  2628                           
  2629                           	signat	_channel_Sel,4216
  2630                           	global	_send_nibble2lcd
  2631                           psect	text625,local,class=CODE,delta=2
  2632                           global __ptext625
  2633  04F8                     __ptext625:
  2634                           
  2635 ;; *************** function _send_nibble2lcd *****************
  2636 ;; Defined at:
  2637 ;;		line 87 in file "C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  2638 ;; Parameters:    Size  Location     Type
  2639 ;;  PortData        1    wreg     unsigned char 
  2640 ;;  flag            1    4[BANK0 ] unsigned char 
  2641 ;; Auto vars:     Size  Location     Type
  2642 ;;  PortData        1    5[BANK0 ] unsigned char 
  2643 ;;  LcdData         1    0        unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;		None               void
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0, pclath, cstack
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2653 ;;      Params:         0       1       0       0       0
  2654 ;;      Locals:         0       1       0       0       0
  2655 ;;      Temps:          0       0       0       0       0
  2656 ;;      Totals:         0       2       0       0       0
  2657 ;;Total ram usage:        2 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; Hardware stack levels required when called:    2
  2660 ;; This function calls:
  2661 ;;		_delay
  2662 ;; This function is called by:
  2663 ;;		_write_lcd_command
  2664 ;;		_write_lcd_data
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           psect	text625
  2668                           	file	"C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  2669                           	line	87
  2670                           	global	__size_of_send_nibble2lcd
  2671  0037                     	__size_of_send_nibble2lcd	equ	__end_of_send_nibble2lcd-_send_nibble2lcd
  2672                           	
  2673  04F8                     _send_nibble2lcd:	
  2674                           	opt	stack 4
  2675                           ; Regs used in _send_nibble2lcd: [wreg+status,2+status,0+pclath+cstack]
  2676                           ;send_nibble2lcd@PortData stored from wreg
  2677                           	line	101
  2678  04F8  1283               	bcf	status, 5	;RP0=0, select bank0
  2679  04F9  1303               	bcf	status, 6	;RP1=0, select bank0
  2680  04FA  00D8               	movwf	(send_nibble2lcd@PortData)
  2681                           	
  2682  04FB                     l2972:	
  2683                           ;ADCLCD.C: 91: UCHAR LcdData;
  2684                           ;ADCLCD.C: 101: if(PortData & 0x80)
  2685  04FB  1FD8               	btfss	(send_nibble2lcd@PortData),(7)&7
  2686  04FC  2CFE               	goto	u3361
  2687  04FD  2CFF               	goto	u3360
  2688  04FE                     u3361:
  2689  04FE  2D01               	goto	l641
  2690  04FF                     u3360:
  2691                           	line	102
  2692                           	
  2693  04FF                     l2974:	
  2694                           ;ADCLCD.C: 102: RB7=1;
  2695  04FF  1786               	bsf	(55/8),(55)&7
  2696  0500  2D02               	goto	l642
  2697                           	line	103
  2698                           	
  2699  0501                     l641:	
  2700                           ;ADCLCD.C: 103: else RB7=0;
  2701  0501  1386               	bcf	(55/8),(55)&7
  2702                           	
  2703  0502                     l642:	
  2704                           	line	105
  2705                           ;ADCLCD.C: 105: if(PortData & 0x40)
  2706  0502  1F58               	btfss	(send_nibble2lcd@PortData),(6)&7
  2707  0503  2D05               	goto	u3371
  2708  0504  2D06               	goto	u3370
  2709  0505                     u3371:
  2710  0505  2D08               	goto	l643
  2711  0506                     u3370:
  2712                           	line	106
  2713                           	
  2714  0506                     l2976:	
  2715                           ;ADCLCD.C: 106: RB6=1;
  2716  0506  1706               	bsf	(54/8),(54)&7
  2717  0507  2D09               	goto	l644
  2718                           	line	107
  2719                           	
  2720  0508                     l643:	
  2721                           ;ADCLCD.C: 107: else RB6=0;
  2722  0508  1306               	bcf	(54/8),(54)&7
  2723                           	
  2724  0509                     l644:	
  2725                           	line	109
  2726                           ;ADCLCD.C: 109: if(PortData & 0x20)
  2727  0509  1ED8               	btfss	(send_nibble2lcd@PortData),(5)&7
  2728  050A  2D0C               	goto	u3381
  2729  050B  2D0D               	goto	u3380
  2730  050C                     u3381:
  2731  050C  2D0F               	goto	l645
  2732  050D                     u3380:
  2733                           	line	110
  2734                           	
  2735  050D                     l2978:	
  2736                           ;ADCLCD.C: 110: RB5=1;
  2737  050D  1686               	bsf	(53/8),(53)&7
  2738  050E  2D10               	goto	l646
  2739                           	line	111
  2740                           	
  2741  050F                     l645:	
  2742                           ;ADCLCD.C: 111: else RB5=0;
  2743  050F  1286               	bcf	(53/8),(53)&7
  2744                           	
  2745  0510                     l646:	
  2746                           	line	113
  2747                           ;ADCLCD.C: 113: if(PortData & 0x10)
  2748  0510  1E58               	btfss	(send_nibble2lcd@PortData),(4)&7
  2749  0511  2D13               	goto	u3391
  2750  0512  2D14               	goto	u3390
  2751  0513                     u3391:
  2752  0513  2D16               	goto	l647
  2753  0514                     u3390:
  2754                           	line	114
  2755                           	
  2756  0514                     l2980:	
  2757                           ;ADCLCD.C: 114: RB4=1;
  2758  0514  1606               	bsf	(52/8),(52)&7
  2759  0515  2D17               	goto	l648
  2760                           	line	115
  2761                           	
  2762  0516                     l647:	
  2763                           ;ADCLCD.C: 115: else RB4=0;
  2764  0516  1206               	bcf	(52/8),(52)&7
  2765                           	
  2766  0517                     l648:	
  2767                           	line	126
  2768                           ;ADCLCD.C: 126: RB2 = 0 ;
  2769  0517  1106               	bcf	(50/8),(50)&7
  2770                           	line	127
  2771                           	
  2772  0518                     l2982:	
  2773                           ;ADCLCD.C: 127: if(flag)
  2774  0518  0857               	movf	(send_nibble2lcd@flag),w
  2775  0519  1D03               	skipz
  2776  051A  2D1C               	goto	u3400
  2777  051B  2D1E               	goto	l649
  2778  051C                     u3400:
  2779                           	line	128
  2780                           	
  2781  051C                     l2984:	
  2782                           ;ADCLCD.C: 128: RB1 = 0 ;
  2783  051C  1086               	bcf	(49/8),(49)&7
  2784  051D  2D1F               	goto	l650
  2785                           	line	129
  2786                           	
  2787  051E                     l649:	
  2788                           	line	130
  2789                           ;ADCLCD.C: 129: else
  2790                           ;ADCLCD.C: 130: RB1 = 1;
  2791  051E  1486               	bsf	(49/8),(49)&7
  2792                           	
  2793  051F                     l650:	
  2794                           	line	131
  2795                           # 131 "C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  2796  051F  0000               nop ;#
  2797                           psect	text625
  2798                           	line	132
  2799                           ;ADCLCD.C: 132: RB2 = 1 ;
  2800  0520  1506               	bsf	(50/8),(50)&7
  2801                           	line	133
  2802                           # 133 "C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  2803  0521  0000               nop ;#
  2804                           psect	text625
  2805                           	line	134
  2806                           ;ADCLCD.C: 134: RB2 = 0 ;
  2807  0522  1106               	bcf	(50/8),(50)&7
  2808                           	line	135
  2809                           # 135 "C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  2810  0523  0000               nop ;#
  2811                           psect	text625
  2812                           	line	136
  2813                           ;ADCLCD.C: 136: RB1 = 0 ;
  2814  0524  1086               	bcf	(49/8),(49)&7
  2815                           	line	137
  2816                           	
  2817  0525                     l2986:	
  2818                           ;ADCLCD.C: 137: delay(2) ;
  2819  0525  3002               	movlw	low(02h)
  2820  0526  00D3               	movwf	(?_delay)
  2821  0527  3000               	movlw	high(02h)
  2822  0528  00D4               	movwf	((?_delay))+1
  2823  0529  120A  118A  25D0   	fcall	_delay
              120A  118A         
  2824                           	line	139
  2825                           	
  2826  052E                     l651:	
  2827  052E  0008               	return
  2828                           	opt stack 0
  2829                           GLOBAL	__end_of_send_nibble2lcd
  2830  052F                     	__end_of_send_nibble2lcd:
  2831 ;; =============== function _send_nibble2lcd ends ============
  2832                           
  2833                           	signat	_send_nibble2lcd,8312
  2834                           	global	___lmul
  2835                           psect	text626,local,class=CODE,delta=2
  2836                           global __ptext626
  2837  0382                     __ptext626:
  2838                           
  2839 ;; *************** function ___lmul *****************
  2840 ;; Defined at:
  2841 ;;		line 3 in file "C:\Program Files\HI-TECH Software\PICC\9.71a\sources\lmul.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;  multiplier      4    0[BANK0 ] unsigned long 
  2844 ;;  multiplicand    4    4[BANK0 ] unsigned long 
  2845 ;; Auto vars:     Size  Location     Type
  2846 ;;  product         4    9[BANK0 ] unsigned long 
  2847 ;; Return value:  Size  Location     Type
  2848 ;;                  4    0[BANK0 ] unsigned long 
  2849 ;; Registers used:
  2850 ;;		wreg, status,2, status,0
  2851 ;; Tracked objects:
  2852 ;;		On entry : 0/0
  2853 ;;		On exit  : 0/0
  2854 ;;		Unchanged: 0/0
  2855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2856 ;;      Params:         0       8       0       0       0
  2857 ;;      Locals:         0       4       0       0       0
  2858 ;;      Temps:          0       1       0       0       0
  2859 ;;      Totals:         0      13       0       0       0
  2860 ;;Total ram usage:       13 bytes
  2861 ;; Hardware stack levels used:    1
  2862 ;; Hardware stack levels required when called:    1
  2863 ;; This function calls:
  2864 ;;		Nothing
  2865 ;; This function is called by:
  2866 ;;		_main
  2867 ;; This function uses a non-reentrant model
  2868 ;;
  2869                           psect	text626
  2870                           	file	"C:\Program Files\HI-TECH Software\PICC\9.71a\sources\lmul.c"
  2871                           	line	3
  2872                           	global	__size_of___lmul
  2873  0048                     	__size_of___lmul	equ	__end_of___lmul-___lmul
  2874                           	
  2875  0382                     ___lmul:	
  2876                           	opt	stack 7
  2877                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  2878                           	line	4
  2879                           	
  2880  0382                     l2958:	
  2881  0382  3000               	movlw	0
  2882  0383  1283               	bcf	status, 5	;RP0=0, select bank0
  2883  0384  1303               	bcf	status, 6	;RP1=0, select bank0
  2884  0385  00DF               	movwf	(___lmul@product+3)
  2885  0386  3000               	movlw	0
  2886  0387  00DE               	movwf	(___lmul@product+2)
  2887  0388  3000               	movlw	0
  2888  0389  00DD               	movwf	(___lmul@product+1)
  2889  038A  3000               	movlw	0
  2890  038B  00DC               	movwf	(___lmul@product)
  2891                           
  2892                           	line	6
  2893                           	
  2894  038C                     l885:	
  2895                           	line	7
  2896                           	
  2897  038C                     l2960:	
  2898  038C  1C53               	btfss	(___lmul@multiplier),(0)&7
  2899  038D  2B8F               	goto	u3311
  2900  038E  2B90               	goto	u3310
  2901  038F                     u3311:
  2902  038F  2BA7               	goto	l886
  2903  0390                     u3310:
  2904                           	line	8
  2905                           	
  2906  0390                     l2962:	
  2907  0390  0857               	movf	(___lmul@multiplicand),w
  2908  0391  07DC               	addwf	(___lmul@product),f
  2909  0392  0858               	movf	(___lmul@multiplicand+1),w
  2910  0393  1103               	clrz
  2911  0394  1803               	skipnc
  2912  0395  3E01               	addlw	1
  2913  0396  1903               	skipnz
  2914  0397  2B99               	goto	u3321
  2915  0398  07DD               	addwf	(___lmul@product+1),f
  2916  0399                     u3321:
  2917  0399  0859               	movf	(___lmul@multiplicand+2),w
  2918  039A  1103               	clrz
  2919  039B  1803               	skipnc
  2920  039C  3E01               	addlw	1
  2921  039D  1903               	skipnz
  2922  039E  2BA0               	goto	u3322
  2923  039F  07DE               	addwf	(___lmul@product+2),f
  2924  03A0                     u3322:
  2925  03A0  085A               	movf	(___lmul@multiplicand+3),w
  2926  03A1  1103               	clrz
  2927  03A2  1803               	skipnc
  2928  03A3  3E01               	addlw	1
  2929  03A4  1903               	skipnz
  2930  03A5  2BA7               	goto	u3323
  2931  03A6  07DF               	addwf	(___lmul@product+3),f
  2932  03A7                     u3323:
  2933                           
  2934                           	
  2935  03A7                     l886:	
  2936                           	line	9
  2937                           	
  2938  03A7                     l2964:	
  2939  03A7  3001               	movlw	01h
  2940  03A8  00DB               	movwf	(??___lmul+0)+0
  2941  03A9                     u3335:
  2942  03A9  1003               	clrc
  2943  03AA  0DD7               	rlf	(___lmul@multiplicand),f
  2944  03AB  0DD8               	rlf	(___lmul@multiplicand+1),f
  2945  03AC  0DD9               	rlf	(___lmul@multiplicand+2),f
  2946  03AD  0DDA               	rlf	(___lmul@multiplicand+3),f
  2947  03AE  0BDB               	decfsz	(??___lmul+0)+0
  2948  03AF  2BA9               	goto	u3335
  2949                           	line	10
  2950                           	
  2951  03B0                     l2966:	
  2952  03B0  3001               	movlw	01h
  2953  03B1                     u3345:
  2954  03B1  1003               	clrc
  2955  03B2  0CD6               	rrf	(___lmul@multiplier+3),f
  2956  03B3  0CD5               	rrf	(___lmul@multiplier+2),f
  2957  03B4  0CD4               	rrf	(___lmul@multiplier+1),f
  2958  03B5  0CD3               	rrf	(___lmul@multiplier),f
  2959  03B6  3EFF               	addlw	-1
  2960  03B7  1D03               	skipz
  2961  03B8  2BB1               	goto	u3345
  2962                           
  2963                           	line	11
  2964  03B9  0856               	movf	(___lmul@multiplier+3),w
  2965  03BA  0455               	iorwf	(___lmul@multiplier+2),w
  2966  03BB  0454               	iorwf	(___lmul@multiplier+1),w
  2967  03BC  0453               	iorwf	(___lmul@multiplier),w
  2968  03BD  1D03               	skipz
  2969  03BE  2BC0               	goto	u3351
  2970  03BF  2BC1               	goto	u3350
  2971  03C0                     u3351:
  2972  03C0  2B8C               	goto	l885
  2973  03C1                     u3350:
  2974                           	
  2975  03C1                     l887:	
  2976                           	line	12
  2977                           	
  2978  03C1                     l2968:	
  2979  03C1  085F               	movf	(___lmul@product+3),w
  2980  03C2  00D6               	movwf	(?___lmul+3)
  2981  03C3  085E               	movf	(___lmul@product+2),w
  2982  03C4  00D5               	movwf	(?___lmul+2)
  2983  03C5  085D               	movf	(___lmul@product+1),w
  2984  03C6  00D4               	movwf	(?___lmul+1)
  2985  03C7  085C               	movf	(___lmul@product),w
  2986  03C8  00D3               	movwf	(?___lmul)
  2987                           
  2988                           	
  2989  03C9                     l2970:	
  2990                           	line	13
  2991                           	
  2992  03C9                     l888:	
  2993  03C9  0008               	return
  2994                           	opt stack 0
  2995                           GLOBAL	__end_of___lmul
  2996  03CA                     	__end_of___lmul:
  2997 ;; =============== function ___lmul ends ============
  2998                           
  2999                           	signat	___lmul,8316
  3000                           	global	___lwmod
  3001                           psect	text627,local,class=CODE,delta=2
  3002                           global __ptext627
  3003  03CA                     __ptext627:
  3004                           
  3005 ;; *************** function ___lwmod *****************
  3006 ;; Defined at:
  3007 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.71a\sources\lwmod.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;  divisor         2    0[BANK0 ] unsigned int 
  3010 ;;  dividend        2    2[BANK0 ] unsigned int 
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  counter         1    5[BANK0 ] unsigned char 
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  2    0[BANK0 ] unsigned int 
  3015 ;; Registers used:
  3016 ;;		wreg, status,2, status,0
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3022 ;;      Params:         0       4       0       0       0
  3023 ;;      Locals:         0       1       0       0       0
  3024 ;;      Temps:          0       1       0       0       0
  3025 ;;      Totals:         0       6       0       0       0
  3026 ;;Total ram usage:        6 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:    1
  3029 ;; This function calls:
  3030 ;;		Nothing
  3031 ;; This function is called by:
  3032 ;;		_dispnum
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           psect	text627
  3036                           	file	"C:\Program Files\HI-TECH Software\PICC\9.71a\sources\lwmod.c"
  3037                           	line	5
  3038                           	global	__size_of___lwmod
  3039  003F                     	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  3040                           	
  3041  03CA                     ___lwmod:	
  3042                           	opt	stack 6
  3043                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3044                           	line	8
  3045                           	
  3046  03CA                     l2936:	
  3047  03CA  1283               	bcf	status, 5	;RP0=0, select bank0
  3048  03CB  1303               	bcf	status, 6	;RP1=0, select bank0
  3049  03CC  0854               	movf	(___lwmod@divisor+1),w
  3050  03CD  0453               	iorwf	(___lwmod@divisor),w
  3051  03CE  1903               	skipnz
  3052  03CF  2BD1               	goto	u3251
  3053  03D0  2BD2               	goto	u3250
  3054  03D1                     u3251:
  3055  03D1  2C02               	goto	l826
  3056  03D2                     u3250:
  3057                           	line	9
  3058                           	
  3059  03D2                     l2938:	
  3060  03D2  01D8               	clrf	(___lwmod@counter)
  3061  03D3  1403               	bsf	status,0
  3062  03D4  0DD8               	rlf	(___lwmod@counter),f
  3063                           	line	10
  3064  03D5  2BE1               	goto	l827
  3065                           	
  3066  03D6                     l828:	
  3067                           	line	11
  3068                           	
  3069  03D6                     l2940:	
  3070  03D6  3001               	movlw	01h
  3071                           	
  3072  03D7                     u3265:
  3073  03D7  1003               	clrc
  3074  03D8  0DD3               	rlf	(___lwmod@divisor),f
  3075  03D9  0DD4               	rlf	(___lwmod@divisor+1),f
  3076  03DA  3EFF               	addlw	-1
  3077  03DB  1D03               	skipz
  3078  03DC  2BD7               	goto	u3265
  3079                           	line	12
  3080                           	
  3081  03DD                     l2942:	
  3082  03DD  3001               	movlw	(01h)
  3083  03DE  00D7               	movwf	(??___lwmod+0)+0
  3084  03DF  0857               	movf	(??___lwmod+0)+0,w
  3085  03E0  07D8               	addwf	(___lwmod@counter),f
  3086                           	line	13
  3087                           	
  3088  03E1                     l827:	
  3089                           	line	10
  3090                           	
  3091  03E1                     l2944:	
  3092  03E1  1FD4               	btfss	(___lwmod@divisor+1),(15)&7
  3093  03E2  2BE4               	goto	u3271
  3094  03E3  2BE5               	goto	u3270
  3095  03E4                     u3271:
  3096  03E4  2BD6               	goto	l828
  3097  03E5                     u3270:
  3098                           	
  3099  03E5                     l829:	
  3100                           	line	14
  3101                           	
  3102  03E5                     l830:	
  3103                           	line	15
  3104                           	
  3105  03E5                     l2946:	
  3106  03E5  0854               	movf	(___lwmod@divisor+1),w
  3107  03E6  0256               	subwf	(___lwmod@dividend+1),w
  3108  03E7  1D03               	skipz
  3109  03E8  2BEB               	goto	u3285
  3110  03E9  0853               	movf	(___lwmod@divisor),w
  3111  03EA  0255               	subwf	(___lwmod@dividend),w
  3112  03EB                     u3285:
  3113  03EB  1C03               	skipc
  3114  03EC  2BEE               	goto	u3281
  3115  03ED  2BEF               	goto	u3280
  3116  03EE                     u3281:
  3117  03EE  2BF5               	goto	l831
  3118  03EF                     u3280:
  3119                           	line	16
  3120                           	
  3121  03EF                     l2948:	
  3122  03EF  0853               	movf	(___lwmod@divisor),w
  3123  03F0  02D5               	subwf	(___lwmod@dividend),f
  3124  03F1  0854               	movf	(___lwmod@divisor+1),w
  3125  03F2  1C03               	skipc
  3126  03F3  03D6               	decf	(___lwmod@dividend+1),f
  3127  03F4  02D6               	subwf	(___lwmod@dividend+1),f
  3128                           	
  3129  03F5                     l831:	
  3130                           	line	17
  3131                           	
  3132  03F5                     l2950:	
  3133  03F5  3001               	movlw	01h
  3134                           	
  3135  03F6                     u3295:
  3136  03F6  1003               	clrc
  3137  03F7  0CD4               	rrf	(___lwmod@divisor+1),f
  3138  03F8  0CD3               	rrf	(___lwmod@divisor),f
  3139  03F9  3EFF               	addlw	-1
  3140  03FA  1D03               	skipz
  3141  03FB  2BF6               	goto	u3295
  3142                           	line	18
  3143                           	
  3144  03FC                     l2952:	
  3145  03FC  3001               	movlw	low(01h)
  3146  03FD  02D8               	subwf	(___lwmod@counter),f
  3147  03FE  1D03               	btfss	status,2
  3148  03FF  2C01               	goto	u3301
  3149  0400  2C02               	goto	u3300
  3150  0401                     u3301:
  3151  0401  2BE5               	goto	l830
  3152  0402                     u3300:
  3153                           	
  3154  0402                     l832:	
  3155                           	line	19
  3156                           	
  3157  0402                     l826:	
  3158                           	line	20
  3159                           	
  3160  0402                     l2954:	
  3161  0402  0856               	movf	(___lwmod@dividend+1),w
  3162  0403  01D4               	clrf	(?___lwmod+1)
  3163  0404  07D4               	addwf	(?___lwmod+1)
  3164  0405  0855               	movf	(___lwmod@dividend),w
  3165  0406  01D3               	clrf	(?___lwmod)
  3166  0407  07D3               	addwf	(?___lwmod)
  3167                           
  3168                           	
  3169  0408                     l2956:	
  3170                           	line	21
  3171                           	
  3172  0408                     l833:	
  3173  0408  0008               	return
  3174                           	opt stack 0
  3175                           GLOBAL	__end_of___lwmod
  3176  0409                     	__end_of___lwmod:
  3177 ;; =============== function ___lwmod ends ============
  3178                           
  3179                           	signat	___lwmod,8314
  3180                           	global	___lwdiv
  3181                           psect	text628,local,class=CODE,delta=2
  3182                           global __ptext628
  3183  0337                     __ptext628:
  3184                           
  3185 ;; *************** function ___lwdiv *****************
  3186 ;; Defined at:
  3187 ;;		line 5 in file "C:\Program Files\HI-TECH Software\PICC\9.71a\sources\lwdiv.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;  divisor         2    0[BANK0 ] unsigned int 
  3190 ;;  dividend        2    2[BANK0 ] unsigned int 
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;  quotient        2    6[BANK0 ] unsigned int 
  3193 ;;  counter         1    5[BANK0 ] unsigned char 
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  2    0[BANK0 ] unsigned int 
  3196 ;; Registers used:
  3197 ;;		wreg, status,2, status,0
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3203 ;;      Params:         0       4       0       0       0
  3204 ;;      Locals:         0       3       0       0       0
  3205 ;;      Temps:          0       1       0       0       0
  3206 ;;      Totals:         0       8       0       0       0
  3207 ;;Total ram usage:        8 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; Hardware stack levels required when called:    1
  3210 ;; This function calls:
  3211 ;;		Nothing
  3212 ;; This function is called by:
  3213 ;;		_dispnum
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           psect	text628
  3217                           	file	"C:\Program Files\HI-TECH Software\PICC\9.71a\sources\lwdiv.c"
  3218                           	line	5
  3219                           	global	__size_of___lwdiv
  3220  004B                     	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3221                           	
  3222  0337                     ___lwdiv:	
  3223                           	opt	stack 6
  3224                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3225                           	line	9
  3226                           	
  3227  0337                     l2912:	
  3228  0337  3000               	movlw	low(0)
  3229  0338  1283               	bcf	status, 5	;RP0=0, select bank0
  3230  0339  1303               	bcf	status, 6	;RP1=0, select bank0
  3231  033A  00D9               	movwf	(___lwdiv@quotient)
  3232  033B  3000               	movlw	high(0)
  3233  033C  00DA               	movwf	((___lwdiv@quotient))+1
  3234                           	line	10
  3235  033D  0854               	movf	(___lwdiv@divisor+1),w
  3236  033E  0453               	iorwf	(___lwdiv@divisor),w
  3237  033F  1903               	skipnz
  3238  0340  2B42               	goto	u3181
  3239  0341  2B43               	goto	u3180
  3240  0342                     u3181:
  3241  0342  2B7B               	goto	l816
  3242  0343                     u3180:
  3243                           	line	11
  3244                           	
  3245  0343                     l2914:	
  3246  0343  01D8               	clrf	(___lwdiv@counter)
  3247  0344  1403               	bsf	status,0
  3248  0345  0DD8               	rlf	(___lwdiv@counter),f
  3249                           	line	12
  3250  0346  2B52               	goto	l817
  3251                           	
  3252  0347                     l818:	
  3253                           	line	13
  3254                           	
  3255  0347                     l2916:	
  3256  0347  3001               	movlw	01h
  3257                           	
  3258  0348                     u3195:
  3259  0348  1003               	clrc
  3260  0349  0DD3               	rlf	(___lwdiv@divisor),f
  3261  034A  0DD4               	rlf	(___lwdiv@divisor+1),f
  3262  034B  3EFF               	addlw	-1
  3263  034C  1D03               	skipz
  3264  034D  2B48               	goto	u3195
  3265                           	line	14
  3266                           	
  3267  034E                     l2918:	
  3268  034E  3001               	movlw	(01h)
  3269  034F  00D7               	movwf	(??___lwdiv+0)+0
  3270  0350  0857               	movf	(??___lwdiv+0)+0,w
  3271  0351  07D8               	addwf	(___lwdiv@counter),f
  3272                           	line	15
  3273                           	
  3274  0352                     l817:	
  3275                           	line	12
  3276                           	
  3277  0352                     l2920:	
  3278  0352  1FD4               	btfss	(___lwdiv@divisor+1),(15)&7
  3279  0353  2B55               	goto	u3201
  3280  0354  2B56               	goto	u3200
  3281  0355                     u3201:
  3282  0355  2B47               	goto	l818
  3283  0356                     u3200:
  3284                           	
  3285  0356                     l819:	
  3286                           	line	16
  3287                           	
  3288  0356                     l820:	
  3289                           	line	17
  3290                           	
  3291  0356                     l2922:	
  3292  0356  3001               	movlw	01h
  3293                           	
  3294  0357                     u3215:
  3295  0357  1003               	clrc
  3296  0358  0DD9               	rlf	(___lwdiv@quotient),f
  3297  0359  0DDA               	rlf	(___lwdiv@quotient+1),f
  3298  035A  3EFF               	addlw	-1
  3299  035B  1D03               	skipz
  3300  035C  2B57               	goto	u3215
  3301                           	line	18
  3302  035D  0854               	movf	(___lwdiv@divisor+1),w
  3303  035E  0256               	subwf	(___lwdiv@dividend+1),w
  3304  035F  1D03               	skipz
  3305  0360  2B63               	goto	u3225
  3306  0361  0853               	movf	(___lwdiv@divisor),w
  3307  0362  0255               	subwf	(___lwdiv@dividend),w
  3308  0363                     u3225:
  3309  0363  1C03               	skipc
  3310  0364  2B66               	goto	u3221
  3311  0365  2B67               	goto	u3220
  3312  0366                     u3221:
  3313  0366  2B6E               	goto	l821
  3314  0367                     u3220:
  3315                           	line	19
  3316                           	
  3317  0367                     l2924:	
  3318  0367  0853               	movf	(___lwdiv@divisor),w
  3319  0368  02D5               	subwf	(___lwdiv@dividend),f
  3320  0369  0854               	movf	(___lwdiv@divisor+1),w
  3321  036A  1C03               	skipc
  3322  036B  03D6               	decf	(___lwdiv@dividend+1),f
  3323  036C  02D6               	subwf	(___lwdiv@dividend+1),f
  3324                           	line	20
  3325                           	
  3326  036D                     l2926:	
  3327  036D  1459               	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3328                           	line	21
  3329                           	
  3330  036E                     l821:	
  3331                           	line	22
  3332                           	
  3333  036E                     l2928:	
  3334  036E  3001               	movlw	01h
  3335                           	
  3336  036F                     u3235:
  3337  036F  1003               	clrc
  3338  0370  0CD4               	rrf	(___lwdiv@divisor+1),f
  3339  0371  0CD3               	rrf	(___lwdiv@divisor),f
  3340  0372  3EFF               	addlw	-1
  3341  0373  1D03               	skipz
  3342  0374  2B6F               	goto	u3235
  3343                           	line	23
  3344                           	
  3345  0375                     l2930:	
  3346  0375  3001               	movlw	low(01h)
  3347  0376  02D8               	subwf	(___lwdiv@counter),f
  3348  0377  1D03               	btfss	status,2
  3349  0378  2B7A               	goto	u3241
  3350  0379  2B7B               	goto	u3240
  3351  037A                     u3241:
  3352  037A  2B56               	goto	l820
  3353  037B                     u3240:
  3354                           	
  3355  037B                     l822:	
  3356                           	line	24
  3357                           	
  3358  037B                     l816:	
  3359                           	line	25
  3360                           	
  3361  037B                     l2932:	
  3362  037B  085A               	movf	(___lwdiv@quotient+1),w
  3363  037C  01D4               	clrf	(?___lwdiv+1)
  3364  037D  07D4               	addwf	(?___lwdiv+1)
  3365  037E  0859               	movf	(___lwdiv@quotient),w
  3366  037F  01D3               	clrf	(?___lwdiv)
  3367  0380  07D3               	addwf	(?___lwdiv)
  3368                           
  3369                           	
  3370  0381                     l2934:	
  3371                           	line	26
  3372                           	
  3373  0381                     l823:	
  3374  0381  0008               	return
  3375                           	opt stack 0
  3376                           GLOBAL	__end_of___lwdiv
  3377  0382                     	__end_of___lwdiv:
  3378 ;; =============== function ___lwdiv ends ============
  3379                           
  3380                           	signat	___lwdiv,8314
  3381                           	global	_initvar
  3382                           psect	text629,local,class=CODE,delta=2
  3383                           global __ptext629
  3384  05AE                     __ptext629:
  3385                           
  3386 ;; *************** function _initvar *****************
  3387 ;; Defined at:
  3388 ;;		line 305 in file "C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  3389 ;; Parameters:    Size  Location     Type
  3390 ;;		None
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;		None
  3393 ;; Return value:  Size  Location     Type
  3394 ;;		None               void
  3395 ;; Registers used:
  3396 ;;		wreg, status,2, status,0
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3402 ;;      Params:         0       0       0       0       0
  3403 ;;      Locals:         0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0
  3405 ;;      Totals:         0       0       0       0       0
  3406 ;;Total ram usage:        0 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    1
  3409 ;; This function calls:
  3410 ;;		Nothing
  3411 ;; This function is called by:
  3412 ;;		_main
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           psect	text629
  3416                           	file	"C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  3417                           	line	305
  3418                           	global	__size_of_initvar
  3419  0022                     	__size_of_initvar	equ	__end_of_initvar-_initvar
  3420                           	
  3421  05AE                     _initvar:	
  3422                           	opt	stack 7
  3423                           ; Regs used in _initvar: [wreg+status,2+status,0]
  3424                           	line	306
  3425                           	
  3426  05AE                     l2900:	
  3427                           ;ADCLCD.C: 306: adcflag=0;
  3428  05AE  10FB               	bcf	(_adcflag/8),(_adcflag)&7
  3429                           	line	307
  3430                           	
  3431  05AF                     l2902:	
  3432                           ;ADCLCD.C: 307: delaycnt=0;
  3433  05AF  3000               	movlw	low(0)
  3434  05B0  1283               	bcf	status, 5	;RP0=0, select bank0
  3435  05B1  1303               	bcf	status, 6	;RP1=0, select bank0
  3436  05B2  00C4               	movwf	(_delaycnt)
  3437  05B3  3000               	movlw	high(0)
  3438  05B4  00C5               	movwf	((_delaycnt))+1
  3439                           	line	308
  3440                           	
  3441  05B5                     l2904:	
  3442                           ;ADCLCD.C: 308: Second=0;
  3443  05B5  1003               	clrc
  3444  05B6  3000               	movlw	0
  3445  05B7  1803               	btfsc	status,0
  3446  05B8  3001               	movlw	1
  3447  05B9  00CD               	movwf	(_Second)
  3448                           	line	309
  3449                           	
  3450  05BA                     l2906:	
  3451                           ;ADCLCD.C: 309: milisec=0;
  3452  05BA  3000               	movlw	low(0)
  3453  05BB  00C6               	movwf	(_milisec)
  3454  05BC  3000               	movlw	high(0)
  3455  05BD  00C7               	movwf	((_milisec))+1
  3456                           	line	310
  3457                           ;ADCLCD.C: 310: scan=0;
  3458  05BE  1003               	clrc
  3459  05BF  3000               	movlw	0
  3460  05C0  1803               	btfsc	status,0
  3461  05C1  3001               	movlw	1
  3462  05C2  00D1               	movwf	(_scan)
  3463                           	line	311
  3464                           ;ADCLCD.C: 311: Rxindex=0;
  3465  05C3  1003               	clrc
  3466  05C4  3000               	movlw	0
  3467  05C5  1803               	btfsc	status,0
  3468  05C6  3001               	movlw	1
  3469  05C7  00F7               	movwf	(_Rxindex)
  3470                           	line	312
  3471                           	
  3472  05C8                     l2908:	
  3473                           ;ADCLCD.C: 312: RxFlag = 0 ;
  3474  05C8  107B               	bcf	(_RxFlag/8),(_RxFlag)&7
  3475                           	line	313
  3476                           ;ADCLCD.C: 313: Rxcnt = 0 ;
  3477  05C9  1003               	clrc
  3478  05CA  3000               	movlw	0
  3479  05CB  1803               	btfsc	status,0
  3480  05CC  3001               	movlw	1
  3481  05CD  00F6               	movwf	(_Rxcnt)
  3482                           	line	314
  3483                           	
  3484  05CE                     l2910:	
  3485                           ;ADCLCD.C: 314: recBit=0;
  3486  05CE  11FB               	bcf	(_recBit/8),(_recBit)&7
  3487                           	line	315
  3488                           	
  3489  05CF                     l729:	
  3490  05CF  0008               	return
  3491                           	opt stack 0
  3492                           GLOBAL	__end_of_initvar
  3493  05D0                     	__end_of_initvar:
  3494 ;; =============== function _initvar ends ============
  3495                           
  3496                           	signat	_initvar,88
  3497                           	global	_delay
  3498                           psect	text630,local,class=CODE,delta=2
  3499                           global __ptext630
  3500  05D0                     __ptext630:
  3501                           
  3502 ;; *************** function _delay *****************
  3503 ;; Defined at:
  3504 ;;		line 81 in file "C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  num             2    0[BANK0 ] unsigned int 
  3507 ;; Auto vars:     Size  Location     Type
  3508 ;;  time            2    2[BANK0 ] unsigned int 
  3509 ;; Return value:  Size  Location     Type
  3510 ;;		None               void
  3511 ;; Registers used:
  3512 ;;		wreg, status,2, status,0
  3513 ;; Tracked objects:
  3514 ;;		On entry : 0/0
  3515 ;;		On exit  : 0/0
  3516 ;;		Unchanged: 0/0
  3517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3518 ;;      Params:         0       2       0       0       0
  3519 ;;      Locals:         0       2       0       0       0
  3520 ;;      Temps:          0       0       0       0       0
  3521 ;;      Totals:         0       4       0       0       0
  3522 ;;Total ram usage:        4 bytes
  3523 ;; Hardware stack levels used:    1
  3524 ;; Hardware stack levels required when called:    1
  3525 ;; This function calls:
  3526 ;;		Nothing
  3527 ;; This function is called by:
  3528 ;;		_send_nibble2lcd
  3529 ;;		_write_lcd_command
  3530 ;;		_initlcd
  3531 ;;		_display
  3532 ;;		_channel_Sel
  3533 ;;		_main
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           psect	text630
  3537                           	file	"C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  3538                           	line	81
  3539                           	global	__size_of_delay
  3540  0016                     	__size_of_delay	equ	__end_of_delay-_delay
  3541                           	
  3542  05D0                     _delay:	
  3543                           	opt	stack 7
  3544                           ; Regs used in _delay: [wreg+status,2+status,0]
  3545                           	line	83
  3546                           	
  3547  05D0                     l2858:	
  3548                           ;ADCLCD.C: 82: UINT time ;
  3549                           ;ADCLCD.C: 83: time = num + delaycnt ;
  3550  05D0  1283               	bcf	status, 5	;RP0=0, select bank0
  3551  05D1  1303               	bcf	status, 6	;RP1=0, select bank0
  3552  05D2  0844               	movf	(_delaycnt),w
  3553  05D3  0753               	addwf	(delay@num),w
  3554  05D4  00D5               	movwf	(delay@time)
  3555  05D5  0845               	movf	(_delaycnt+1),w
  3556  05D6  1803               	skipnc
  3557  05D7  0A45               	incf	(_delaycnt+1),w
  3558  05D8  0754               	addwf	(delay@num+1),w
  3559  05D9  00D6               	movwf	1+(delay@time)
  3560                           	line	84
  3561                           ;ADCLCD.C: 84: while(time != delaycnt) ;
  3562  05DA  2DDB               	goto	l635
  3563                           	
  3564  05DB                     l636:	
  3565                           	
  3566  05DB                     l635:	
  3567                           	
  3568  05DB                     l2860:	
  3569  05DB  0845               	movf	(_delaycnt+1),w
  3570  05DC  0656               	xorwf	(delay@time+1),w
  3571  05DD  1D03               	skipz
  3572  05DE  2DE1               	goto	u3145
  3573  05DF  0844               	movf	(_delaycnt),w
  3574  05E0  0655               	xorwf	(delay@time),w
  3575  05E1                     u3145:
  3576                           
  3577  05E1  1D03               	skipz
  3578  05E2  2DE4               	goto	u3141
  3579  05E3  2DE5               	goto	u3140
  3580  05E4                     u3141:
  3581  05E4  2DDB               	goto	l636
  3582  05E5                     u3140:
  3583                           	
  3584  05E5                     l637:	
  3585                           	line	85
  3586                           	
  3587  05E5                     l638:	
  3588  05E5  0008               	return
  3589                           	opt stack 0
  3590                           GLOBAL	__end_of_delay
  3591  05E6                     	__end_of_delay:
  3592 ;; =============== function _delay ends ============
  3593                           
  3594                           	signat	_delay,4216
  3595                           	global	_inithw
  3596                           psect	text631,local,class=CODE,delta=2
  3597                           global __ptext631
  3598  0482                     __ptext631:
  3599                           
  3600 ;; *************** function _inithw *****************
  3601 ;; Defined at:
  3602 ;;		line 45 in file "C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;		None
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;		None
  3607 ;; Return value:  Size  Location     Type
  3608 ;;		None               void
  3609 ;; Registers used:
  3610 ;;		wreg, status,2
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3616 ;;      Params:         0       0       0       0       0
  3617 ;;      Locals:         0       0       0       0       0
  3618 ;;      Temps:          0       0       0       0       0
  3619 ;;      Totals:         0       0       0       0       0
  3620 ;;Total ram usage:        0 bytes
  3621 ;; Hardware stack levels used:    1
  3622 ;; Hardware stack levels required when called:    1
  3623 ;; This function calls:
  3624 ;;		Nothing
  3625 ;; This function is called by:
  3626 ;;		_main
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           psect	text631
  3630                           	file	"C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  3631                           	line	45
  3632                           	global	__size_of_inithw
  3633  003C                     	__size_of_inithw	equ	__end_of_inithw-_inithw
  3634                           	
  3635  0482                     _inithw:	
  3636                           	opt	stack 7
  3637                           ; Regs used in _inithw: [wreg+status,2]
  3638                           	line	47
  3639                           	
  3640  0482                     l2814:	
  3641                           ;ADCLCD.C: 47: ADCON1 = 0X84;
  3642  0482  3084               	movlw	(084h)
  3643  0483  1683               	bsf	status, 5	;RP0=1, select bank1
  3644  0484  1303               	bcf	status, 6	;RP1=0, select bank1
  3645  0485  009F               	movwf	(159)^080h	;volatile
  3646                           	line	48
  3647                           	
  3648  0486                     l2816:	
  3649                           ;ADCLCD.C: 48: OPTION = 0X00 ;
  3650  0486  0181               	clrf	(129)^080h	;volatile
  3651                           	line	49
  3652                           	
  3653  0487                     l2818:	
  3654                           ;ADCLCD.C: 49: INTCON = 0X00 ;
  3655  0487  018B               	clrf	(11)	;volatile
  3656                           	line	50
  3657                           ;ADCLCD.C: 50: TRISA = 0X0f ;
  3658  0488  300F               	movlw	(0Fh)
  3659  0489  0085               	movwf	(133)^080h	;volatile
  3660                           	line	51
  3661                           	
  3662  048A                     l2820:	
  3663                           ;ADCLCD.C: 51: TRISB = 0X00 ;
  3664  048A  0186               	clrf	(134)^080h	;volatile
  3665                           	line	52
  3666                           	
  3667  048B                     l2822:	
  3668                           ;ADCLCD.C: 52: TRISC = 0X80 ;
  3669  048B  3080               	movlw	(080h)
  3670  048C  0087               	movwf	(135)^080h	;volatile
  3671                           	line	53
  3672                           	
  3673  048D                     l2824:	
  3674                           ;ADCLCD.C: 53: TRISD = 0X80 ;
  3675  048D  3080               	movlw	(080h)
  3676  048E  0088               	movwf	(136)^080h	;volatile
  3677                           	line	54
  3678                           	
  3679  048F                     l2826:	
  3680                           ;ADCLCD.C: 54: TRISE = 0X00 ;
  3681  048F  0189               	clrf	(137)^080h	;volatile
  3682                           	line	55
  3683                           ;ADCLCD.C: 55: T1CON = 0X01 ;
  3684  0490  3001               	movlw	(01h)
  3685  0491  1283               	bcf	status, 5	;RP0=0, select bank0
  3686  0492  1303               	bcf	status, 6	;RP1=0, select bank0
  3687  0493  0090               	movwf	(16)	;volatile
  3688                           	line	56
  3689                           	
  3690  0494                     l2828:	
  3691                           ;ADCLCD.C: 56: RBPU = 0X00 ;
  3692  0494  1683               	bsf	status, 5	;RP0=1, select bank1
  3693  0495  1303               	bcf	status, 6	;RP1=0, select bank1
  3694  0496  1381               	bcf	(1039/8)^080h,(1039)&7
  3695                           	line	57
  3696                           	
  3697  0497                     l2830:	
  3698                           ;ADCLCD.C: 57: ADIF=0;
  3699  0497  1283               	bcf	status, 5	;RP0=0, select bank0
  3700  0498  1303               	bcf	status, 6	;RP1=0, select bank0
  3701  0499  130C               	bcf	(102/8),(102)&7
  3702                           	line	58
  3703                           ;ADCLCD.C: 58: TMR1H = 0xF5 ;
  3704  049A  30F5               	movlw	(0F5h)
  3705  049B  008F               	movwf	(15)	;volatile
  3706                           	line	59
  3707                           ;ADCLCD.C: 59: TMR1L = 0x33 ;
  3708  049C  3033               	movlw	(033h)
  3709  049D  008E               	movwf	(14)	;volatile
  3710                           	line	60
  3711                           	
  3712  049E                     l2832:	
  3713                           ;ADCLCD.C: 60: PEIE = 1 ;
  3714  049E  170B               	bsf	(94/8),(94)&7
  3715                           	line	61
  3716                           	
  3717  049F                     l2834:	
  3718                           ;ADCLCD.C: 61: TMR1IE = 1 ;
  3719  049F  1683               	bsf	status, 5	;RP0=1, select bank1
  3720  04A0  1303               	bcf	status, 6	;RP1=0, select bank1
  3721  04A1  140C               	bsf	(1120/8)^080h,(1120)&7
  3722                           	line	65
  3723                           ;ADCLCD.C: 65: SPBRG = 71 ;
  3724  04A2  3047               	movlw	(047h)
  3725  04A3  0099               	movwf	(153)^080h	;volatile
  3726                           	line	66
  3727                           	
  3728  04A4                     l2836:	
  3729                           ;ADCLCD.C: 66: CREN = 1 ;
  3730  04A4  1283               	bcf	status, 5	;RP0=0, select bank0
  3731  04A5  1303               	bcf	status, 6	;RP1=0, select bank0
  3732  04A6  1618               	bsf	(196/8),(196)&7
  3733                           	line	67
  3734                           	
  3735  04A7                     l2838:	
  3736                           ;ADCLCD.C: 67: BRGH = 1 ;
  3737  04A7  1683               	bsf	status, 5	;RP0=1, select bank1
  3738  04A8  1303               	bcf	status, 6	;RP1=0, select bank1
  3739  04A9  1518               	bsf	(1218/8)^080h,(1218)&7
  3740                           	line	68
  3741                           	
  3742  04AA                     l2840:	
  3743                           ;ADCLCD.C: 68: SYNC = 0 ;
  3744  04AA  1218               	bcf	(1220/8)^080h,(1220)&7
  3745                           	line	69
  3746                           	
  3747  04AB                     l2842:	
  3748                           ;ADCLCD.C: 69: SPEN = 1 ;
  3749  04AB  1283               	bcf	status, 5	;RP0=0, select bank0
  3750  04AC  1303               	bcf	status, 6	;RP1=0, select bank0
  3751  04AD  1798               	bsf	(199/8),(199)&7
  3752                           	line	70
  3753                           	
  3754  04AE                     l2844:	
  3755                           ;ADCLCD.C: 70: TXIE = 0 ;
  3756  04AE  1683               	bsf	status, 5	;RP0=1, select bank1
  3757  04AF  1303               	bcf	status, 6	;RP1=0, select bank1
  3758  04B0  120C               	bcf	(1124/8)^080h,(1124)&7
  3759                           	line	71
  3760                           	
  3761  04B1                     l2846:	
  3762                           ;ADCLCD.C: 71: RCIE = 1 ;
  3763  04B1  168C               	bsf	(1125/8)^080h,(1125)&7
  3764                           	line	72
  3765                           	
  3766  04B2                     l2848:	
  3767                           ;ADCLCD.C: 72: TX9 = 0 ;
  3768  04B2  1318               	bcf	(1222/8)^080h,(1222)&7
  3769                           	line	73
  3770                           	
  3771  04B3                     l2850:	
  3772                           ;ADCLCD.C: 73: RX9 = 0 ;
  3773  04B3  1283               	bcf	status, 5	;RP0=0, select bank0
  3774  04B4  1303               	bcf	status, 6	;RP1=0, select bank0
  3775  04B5  1318               	bcf	(198/8),(198)&7
  3776                           	line	74
  3777                           	
  3778  04B6                     l2852:	
  3779                           ;ADCLCD.C: 74: TXEN = 1 ;
  3780  04B6  1683               	bsf	status, 5	;RP0=1, select bank1
  3781  04B7  1303               	bcf	status, 6	;RP1=0, select bank1
  3782  04B8  1698               	bsf	(1221/8)^080h,(1221)&7
  3783                           	line	75
  3784                           	
  3785  04B9                     l2854:	
  3786                           ;ADCLCD.C: 75: PIR1 = 0 ;
  3787  04B9  1283               	bcf	status, 5	;RP0=0, select bank0
  3788  04BA  1303               	bcf	status, 6	;RP1=0, select bank0
  3789  04BB  018C               	clrf	(12)	;volatile
  3790                           	line	76
  3791                           	
  3792  04BC                     l2856:	
  3793                           ;ADCLCD.C: 76: GIE = 1 ;
  3794  04BC  178B               	bsf	(95/8),(95)&7
  3795                           	line	77
  3796                           	
  3797  04BD                     l632:	
  3798  04BD  0008               	return
  3799                           	opt stack 0
  3800                           GLOBAL	__end_of_inithw
  3801  04BE                     	__end_of_inithw:
  3802 ;; =============== function _inithw ends ============
  3803                           
  3804                           	signat	_inithw,88
  3805                           	global	_isr
  3806                           psect	text632,local,class=CODE,delta=2
  3807                           global __ptext632
  3808  01F3                     __ptext632:
  3809                           
  3810 ;; *************** function _isr *****************
  3811 ;; Defined at:
  3812 ;;		line 5 in file "C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  3813 ;; Parameters:    Size  Location     Type
  3814 ;;		None
  3815 ;; Auto vars:     Size  Location     Type
  3816 ;;		None
  3817 ;; Return value:  Size  Location     Type
  3818 ;;		None               void
  3819 ;; Registers used:
  3820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3826 ;;      Params:         0       0       0       0       0
  3827 ;;      Locals:         0       0       0       0       0
  3828 ;;      Temps:          6       0       0       0       0
  3829 ;;      Totals:         6       0       0       0       0
  3830 ;;Total ram usage:        6 bytes
  3831 ;; Hardware stack levels used:    1
  3832 ;; This function calls:
  3833 ;;		Nothing
  3834 ;; This function is called by:
  3835 ;;		Interrupt level 1
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           psect	text632
  3839                           	file	"C:\Documents and Settings\Ci1\Desktop\PIC_AnalogSensors_LED\Code\ADCLCD.C"
  3840                           	line	5
  3841                           	global	__size_of_isr
  3842  008C                     	__size_of_isr	equ	__end_of_isr-_isr
  3843                           	
  3844  01F3                     _isr:	
  3845                           	opt	stack 2
  3846                           ; Regs used in _isr: [wreg-fsr0h+status,2-btemp+0]
  3847                           psect	intentry,class=CODE,delta=2
  3848                           global __pintentry
  3849  0004                     __pintentry:
  3850                           global interrupt_function
  3851  0004                     interrupt_function:
  3852                           	global saved_w
  3853  007E                     	saved_w	set	btemp+0
  3854  0004  00FE               	movwf	saved_w
  3855  0005  0803               	movf	status,w
  3856  0006  00F2               	movwf	(??_isr+2)
  3857  0007  0804               	movf	fsr0,w
  3858  0008  00F3               	movwf	(??_isr+3)
  3859  0009  080A               	movf	pclath,w
  3860  000A  00F4               	movwf	(??_isr+4)
  3861  000B  087F               	movf	btemp+1,w
  3862  000C  00F5               	movwf	(??_isr+5)
  3863  000D  120A  118A  29F3   	ljmp	_isr
  3864                           psect	text632
  3865                           	line	6
  3866                           	
  3867  01F3                     i1l2384:	
  3868                           ;ADCLCD.C: 6: if(TMR1IF)
  3869  01F3  1283               	bcf	status, 5	;RP0=0, select bank0
  3870  01F4  1303               	bcf	status, 6	;RP1=0, select bank0
  3871  01F5  1C0C               	btfss	(96/8),(96)&7
  3872  01F6  29F8               	goto	u255_21
  3873  01F7  29F9               	goto	u255_20
  3874  01F8                     u255_21:
  3875  01F8  2A31               	goto	i1l619
  3876  01F9                     u255_20:
  3877                           	line	8
  3878                           	
  3879  01F9                     i1l2386:	
  3880                           ;ADCLCD.C: 7: {
  3881                           ;ADCLCD.C: 8: TMR1IF = 0 ;
  3882  01F9  100C               	bcf	(96/8),(96)&7
  3883                           	line	9
  3884                           	
  3885  01FA                     i1l2388:	
  3886                           ;ADCLCD.C: 9: TMR1H = 0xF5 ;
  3887  01FA  30F5               	movlw	(0F5h)
  3888  01FB  008F               	movwf	(15)	;volatile
  3889                           	line	10
  3890                           ;ADCLCD.C: 10: TMR1L = 0x33 ;
  3891  01FC  3033               	movlw	(033h)
  3892  01FD  008E               	movwf	(14)	;volatile
  3893                           	line	11
  3894                           ;ADCLCD.C: 11: delaycnt++ ;
  3895  01FE  3001               	movlw	low(01h)
  3896  01FF  07C4               	addwf	(_delaycnt),f
  3897  0200  1803               	skipnc
  3898  0201  0AC5               	incf	(_delaycnt+1),f
  3899  0202  3000               	movlw	high(01h)
  3900  0203  07C5               	addwf	(_delaycnt+1),f
  3901                           	line	12
  3902                           	
  3903  0204                     i1l2390:	
  3904                           ;ADCLCD.C: 12: if(RxFlag && Rxcnt) Rxcnt-- ;
  3905  0204  1C7B               	btfss	(_RxFlag/8),(_RxFlag)&7
  3906  0205  2A07               	goto	u256_21
  3907  0206  2A08               	goto	u256_20
  3908  0207                     u256_21:
  3909  0207  2A0E               	goto	i1l620
  3910  0208                     u256_20:
  3911                           	
  3912  0208                     i1l2392:	
  3913  0208  0876               	movf	(_Rxcnt),w
  3914  0209  1D03               	skipz
  3915  020A  2A0C               	goto	u257_20
  3916  020B  2A0E               	goto	i1l620
  3917  020C                     u257_20:
  3918                           	
  3919  020C                     i1l2394:	
  3920  020C  3001               	movlw	low(01h)
  3921  020D  02F6               	subwf	(_Rxcnt),f
  3922                           	
  3923  020E                     i1l620:	
  3924                           	line	13
  3925                           	
  3926  020E                     i1l2396:	
  3927                           ;ADCLCD.C: 13: milisec++ ;
  3928  020E  3001               	movlw	low(01h)
  3929  020F  07C6               	addwf	(_milisec),f
  3930  0210  1803               	skipnc
  3931  0211  0AC7               	incf	(_milisec+1),f
  3932  0212  3000               	movlw	high(01h)
  3933  0213  07C7               	addwf	(_milisec+1),f
  3934                           	line	14
  3935                           	
  3936  0214                     i1l2398:	
  3937                           ;ADCLCD.C: 14: if(milisec >= 1000) {milisec = 0 ; Second++;}
  3938  0214  3003               	movlw	high(03E8h)
  3939  0215  0247               	subwf	(_milisec+1),w
  3940  0216  30E8               	movlw	low(03E8h)
  3941  0217  1903               	skipnz
  3942  0218  0246               	subwf	(_milisec),w
  3943  0219  1C03               	skipc
  3944  021A  2A1C               	goto	u258_21
  3945  021B  2A1D               	goto	u258_20
  3946  021C                     u258_21:
  3947  021C  2A25               	goto	i1l621
  3948  021D                     u258_20:
  3949                           	
  3950  021D                     i1l2400:	
  3951  021D  3000               	movlw	low(0)
  3952  021E  00C6               	movwf	(_milisec)
  3953  021F  3000               	movlw	high(0)
  3954  0220  00C7               	movwf	((_milisec))+1
  3955                           	
  3956  0221                     i1l2402:	
  3957  0221  3001               	movlw	(01h)
  3958  0222  00F0               	movwf	(??_isr+0)+0
  3959  0223  0870               	movf	(??_isr+0)+0,w
  3960  0224  07CD               	addwf	(_Second),f
  3961                           	
  3962  0225                     i1l621:	
  3963                           	line	15
  3964                           	
  3965  0225                     i1l2404:	
  3966                           ;ADCLCD.C: 15: if(kcnt) kcnt-- ;
  3967  0225  0878               	movf	(_kcnt),w	;volatile
  3968  0226  1D03               	skipz
  3969  0227  2A29               	goto	u259_20
  3970  0228  2A2C               	goto	i1l622
  3971  0229                     u259_20:
  3972                           	
  3973  0229                     i1l2406:	
  3974  0229  3001               	movlw	low(01h)
  3975  022A  02F8               	subwf	(_kcnt),f	;volatile
  3976  022B  2A31               	goto	i1l623
  3977                           	line	16
  3978                           	
  3979  022C                     i1l622:	
  3980                           	line	18
  3981                           ;ADCLCD.C: 16: else
  3982                           ;ADCLCD.C: 17: {
  3983                           ;ADCLCD.C: 18: if(!RD7) { kflag = 1 ; }
  3984  022C  1B88               	btfsc	(71/8),(71)&7
  3985  022D  2A2F               	goto	u260_21
  3986  022E  2A30               	goto	u260_20
  3987  022F                     u260_21:
  3988  022F  2A31               	goto	i1l624
  3989  0230                     u260_20:
  3990                           	
  3991  0230                     i1l2408:	
  3992  0230  157B               	bsf	(_kflag/8),(_kflag)&7
  3993                           	
  3994  0231                     i1l624:	
  3995                           	line	19
  3996                           	
  3997  0231                     i1l623:	
  3998                           	line	21
  3999                           	
  4000  0231                     i1l619:	
  4001                           	line	22
  4002                           ;ADCLCD.C: 19: }
  4003                           ;ADCLCD.C: 21: }
  4004                           ;ADCLCD.C: 22: if(ADIF)
  4005  0231  1F0C               	btfss	(102/8),(102)&7
  4006  0232  2A34               	goto	u261_21
  4007  0233  2A35               	goto	u261_20
  4008  0234                     u261_21:
  4009  0234  2A51               	goto	i1l625
  4010  0235                     u261_20:
  4011                           	line	24
  4012                           	
  4013  0235                     i1l2410:	
  4014                           ;ADCLCD.C: 23: {
  4015                           ;ADCLCD.C: 24: ADIF = 0 ;
  4016  0235  130C               	bcf	(102/8),(102)&7
  4017                           	line	25
  4018                           ;ADCLCD.C: 25: adcflag = 1 ;
  4019  0236  14FB               	bsf	(_adcflag/8),(_adcflag)&7
  4020                           	line	26
  4021                           	
  4022  0237                     i1l2412:	
  4023                           ;ADCLCD.C: 26: adcval = (((UINT)ADRESH) << 8) + ADRESL ;
  4024  0237  081E               	movf	(30),w	;volatile
  4025  0238  00F0               	movwf	(??_isr+0)+0
  4026  0239  01F1               	clrf	(??_isr+0)+0+1
  4027  023A  3008               	movlw	08h
  4028  023B  00FE               	movwf	btemp+0
  4029  023C                     u262_25:
  4030  023C  1003               	clrc
  4031  023D  0DF0               	rlf	(??_isr+0)+0,f
  4032  023E  0DF1               	rlf	(??_isr+0)+1,f
  4033  023F  0BFE               	decfsz	btemp+0,f
  4034  0240  2A3C               	goto	u262_25
  4035  0241  1683               	bsf	status, 5	;RP0=1, select bank1
  4036  0242  1303               	bcf	status, 6	;RP1=0, select bank1
  4037  0243  081E               	movf	(158)^080h,w	;volatile
  4038  0244  0770               	addwf	0+(??_isr+0)+0,w
  4039  0245  1283               	bcf	status, 5	;RP0=0, select bank0
  4040  0246  1303               	bcf	status, 6	;RP1=0, select bank0
  4041  0247  00BC               	movwf	(_adcval)
  4042  0248  3000               	movlw	0
  4043  0249  1803               	skipnc
  4044  024A  3001               	movlw	1
  4045  024B  0771               	addwf	1+(??_isr+0)+0,w
  4046  024C  00BD               	movwf	1+(_adcval)
  4047                           	line	27
  4048                           	
  4049  024D                     i1l2414:	
  4050                           ;ADCLCD.C: 27: adcval &= 0x03FF ;
  4051  024D  30FF               	movlw	low(03FFh)
  4052  024E  05BC               	andwf	(_adcval),f
  4053  024F  3003               	movlw	high(03FFh)
  4054  0250  05BD               	andwf	(_adcval+1),f
  4055                           	line	28
  4056                           	
  4057  0251                     i1l625:	
  4058                           	line	29
  4059                           	
  4060  0251                     i1l2416:	
  4061                           ;ADCLCD.C: 28: }
  4062                           ;ADCLCD.C: 29: if(RCIF)
  4063  0251  1E8C               	btfss	(101/8),(101)&7
  4064  0252  2A54               	goto	u263_21
  4065  0253  2A55               	goto	u263_20
  4066  0254                     u263_21:
  4067  0254  2A74               	goto	i1l626
  4068  0255                     u263_20:
  4069                           	line	31
  4070                           	
  4071  0255                     i1l2418:	
  4072                           ;ADCLCD.C: 30: {
  4073                           ;ADCLCD.C: 31: DataBuffer[Rxindex] = RCREG ;
  4074  0255  081A               	movf	(26),w	;volatile
  4075  0256  00F0               	movwf	(??_isr+0)+0
  4076  0257  0877               	movf	(_Rxindex),w
  4077  0258  3E90               	addlw	_DataBuffer&0ffh
  4078  0259  0084               	movwf	fsr0
  4079  025A  0870               	movf	(??_isr+0)+0,w
  4080  025B  1783               	bsf	status, 7	;select IRP bank3
  4081  025C  0080               	movwf	indf
  4082                           	line	32
  4083                           ;ADCLCD.C: 32: if(DataBuffer[Rxindex]=='*')
  4084  025D  0877               	movf	(_Rxindex),w
  4085  025E  3E90               	addlw	_DataBuffer&0ffh
  4086  025F  0084               	movwf	fsr0
  4087  0260  0800               	movf	indf,w
  4088  0261  3A2A               	xorlw	02Ah
  4089  0262  1D03               	skipz
  4090  0263  2A65               	goto	u264_21
  4091  0264  2A66               	goto	u264_20
  4092  0265                     u264_21:
  4093  0265  2A67               	goto	i1l627
  4094  0266                     u264_20:
  4095                           	line	33
  4096                           	
  4097  0266                     i1l2420:	
  4098                           ;ADCLCD.C: 33: recBit=1;
  4099  0266  15FB               	bsf	(_recBit/8),(_recBit)&7
  4100                           	
  4101  0267                     i1l627:	
  4102                           	line	34
  4103                           ;ADCLCD.C: 34: if(recBit==1)
  4104  0267  1DFB               	btfss	(_recBit/8),(_recBit)&7
  4105  0268  2A6A               	goto	u265_21
  4106  0269  2A6B               	goto	u265_20
  4107  026A                     u265_21:
  4108  026A  2A74               	goto	i1l628
  4109  026B                     u265_20:
  4110                           	line	36
  4111                           	
  4112  026B                     i1l2422:	
  4113                           ;ADCLCD.C: 35: {
  4114                           ;ADCLCD.C: 36: Rxcnt = 200 ;
  4115  026B  30C8               	movlw	(0C8h)
  4116  026C  00F0               	movwf	(??_isr+0)+0
  4117  026D  0870               	movf	(??_isr+0)+0,w
  4118  026E  00F6               	movwf	(_Rxcnt)
  4119                           	line	37
  4120                           	
  4121  026F                     i1l2424:	
  4122                           ;ADCLCD.C: 37: RxFlag = 1 ;
  4123  026F  147B               	bsf	(_RxFlag/8),(_RxFlag)&7
  4124                           	line	38
  4125                           	
  4126  0270                     i1l2426:	
  4127                           ;ADCLCD.C: 38: Rxindex++ ;
  4128  0270  3001               	movlw	(01h)
  4129  0271  00F0               	movwf	(??_isr+0)+0
  4130  0272  0870               	movf	(??_isr+0)+0,w
  4131  0273  07F7               	addwf	(_Rxindex),f
  4132                           	line	39
  4133                           	
  4134  0274                     i1l628:	
  4135                           	line	41
  4136                           	
  4137  0274                     i1l626:	
  4138                           	line	43
  4139                           	
  4140  0274                     i1l629:	
  4141  0274  0875               	movf	(??_isr+5),w
  4142  0275  00FF               	movwf	btemp+1
  4143  0276  0874               	movf	(??_isr+4),w
  4144  0277  008A               	movwf	pclath
  4145  0278  0873               	movf	(??_isr+3),w
  4146  0279  0084               	movwf	fsr0
  4147  027A  0872               	movf	(??_isr+2),w
  4148  027B  0083               	movwf	status
  4149  027C  0EFE               	swapf	saved_w,f
  4150  027D  0E7E               	swapf	saved_w,w
  4151  027E  0009               	retfie
  4152                           	opt stack 0
  4153                           GLOBAL	__end_of_isr
  4154  027F                     	__end_of_isr:
  4155 ;; =============== function _isr ends ============
  4156                           
  4157                           	signat	_isr,88
  4158                           psect	text633,local,class=CODE,delta=2
  4159                           global __ptext633
  4160  0000                     __ptext633:
  4161                           	global	btemp
  4162  007E                     	btemp set 07Eh
  4163                           
  4164                           	DABS	1,126,2	;btemp
  4165                           	global	wtemp0
  4166  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.71a build 6446 
Symbol Table                                                                                   Wed Jan 01 00:25:36 2003

                         pc 0002                 ?_LCD_Cursor 005B                          fsr 0004  
                       l700 05A3                         l701 0589                         l702 05AD  
                       l711 02EC                         l703 0594                         l632 04BD  
                       l720 032A                         l712 032A                         l704 05A1  
                       l641 0501                         l721 0319                         l713 02F5  
                       l705 05AD                         l650 051F                         l642 0502  
                       l722 032A                         l714 032A                         l635 05DB  
                       l651 052E                         l643 0508                         l723 0322  
                       l715 02FE                         l636 05DB                         l820 0356  
                       l644 0509                         l724 032A                         l716 032A  
                       l660 01F2                         l740 013F                         l732 0081  
                       l637 05E5                         l821 036E                         l645 050F  
                       l725 032A                         l717 0307                         l741 013F  
                       l733 0088                         l638 05E5                         l822 037B  
                       l830 03E5                         l646 0510                         l726 0336  
                       l718 032A                         l654 0481                         l670 043C  
                       l734 0088                         l823 0381                         l831 03F5  
                       l647 0516                         l719 0310                         l671 0445  
                       l735 008C                         l816 037B                         l832 0402  
                       l648 0517                         l736 0126                         l729 05CF  
                       l817 0352                         l833 0408                         l649 051E  
                       l657 0584                         l681 02D3                         l737 0127  
                       l818 0347                         l826 0402                         l674 04EB  
                       l682 0287                         l738 013E                         l819 0356  
                       l827 03E1                         l675 04C6                         l683 029F  
                       l739 013E                         l828 03D6                         l676 04E7  
                       l684 02D1                         l829 03E5                         l669 0423  
                       l677 04F1                         l685 02D9                         l678 04F7  
                       l686 02DF                         l885 038C                         l886 03A7  
                       l887 03C1                         l888 03C9                         _GIE 005F  
                       _RB1 0031                         _RC0 0038                         _RB2 0032  
                       _RC1 0039                         _RD0 0040                         _RC2 003A  
                       _RB4 0034                         _RC3 003B                         _RB5 0035  
                       _RB6 0036                         _RB7 0037                         _RD7 0047  
                       _RX9 00C6                         _TX9 04C6                         _key 0079  
                       _isr 01F3                         fsr0 0004                         _str 0020  
                       indf 0000                  _DataBuffer 0190                        l3000 02FB  
                      l3010 0310                        l3002 02FE                        l3020 0328  
                      l3012 0316                        l3004 0304                        l3100 058E  
                      l3022 032A                        l3014 0319                        l3006 0307  
                      l3030 0456                        l3102 0594                        l3110 04C1  
                      l3024 0333                        l3016 031F                        l3008 030D  
                      l3032 0461                        l3040 056D                        l3104 059B  
                      l3120 04E7                        l3112 04C6                        l3018 0322  
                      l3034 0476                        l3026 0446                        l3050 0163  
                      l3042 0142                        l3106 05A2                        l3122 04EB  
                      l3114 04D4                        l3130 0295                        l3028 044C  
                      l3036 055B                        l3060 01A0                        l3052 0174  
                      l3044 0148                        l3108 05A3                        l3124 04F1  
                      l3116 04D8                        l3140 02D9                        l3132 029F  
                      l3038 0561                        l3070 01D1                        l3062 01A5  
                      l3054 0179                        l3046 014D                        l3118 04E0  
                      l3134 02BA                        l3126 027F                        l3150 0047  
                      l3142 003D                        l3072 01E2                        l3064 01B6  
                      l3056 018A                        l3048 015E                        l3080 0415  
                      l3136 02D1                        l3128 0287                        l3160 0074  
                      l3152 0048                        l3144 0042                        l3074 01E7  
                      l3066 01BB                        l3058 018F                        l3090 0430  
                      l3082 041C                        l3138 02D3                        l3170 00B5  
                      l3162 007B                        l3154 0053                        l3146 0045  
                      l3068 01CC                        l3092 0436                        l3084 0422  
                      l3076 040C                        l3180 0124                        l3172 00BE  
                      l3164 007C                        l3156 0068                        l3148 0046  
                      l3094 043C                        l3086 0423                        l3078 0410  
                      l3190 013C                        l3182 012B                        l3174 00E0  
                      l3166 0090                        l3158 0073                        l3088 042B  
                      l3096 0588                        l3192 013D                        l3184 012F  
                      l3176 00F3                        l3168 0096                        l3098 0589  
                      l3186 0138                        l3178 0110                        l2820 048A  
                      l2900 05AE                        l3188 013B                        l2830 0497  
                      l2822 048B                        l2814 0482                        l2910 05CE  
                      l2902 05AF                        l2840 04AA                        l2832 049E  
                      l2824 048D                        l2816 0486                        l2904 05B5  
                      l2920 0352                        l2912 0337                        l2850 04B3  
                      l2842 04AB                        l2834 049F                        l2826 048F  
                      l2818 0487                        l2906 05BA                        l2930 0375  
                      l2922 0356                        l2914 0343                        l2852 04B6  
                      l2844 04AE                        l2836 04A4                        l2828 0494  
                      l2860 05DB                        l2908 05C8                        l2932 037B  
                      l2924 0367                        l2916 0347                        l2940 03D6  
                      l2854 04B9                        l2846 04B1                        l2838 04A7  
                      l2934 0381                        l2926 036D                        l2918 034E  
                      l2950 03F5                        l2942 03DD                        l2856 04BC  
                      l2848 04B2                        l2928 036E                        l2952 03FC  
                      l2944 03E1                        l2936 03CA                        l2960 038C  
                      l2858 05D0                        l2954 0402                        l2946 03E5  
                      l2938 03D2                        l2970 03C9                        l2962 0390  
                      l2956 0408                        l2948 03EF                        l2964 03A7  
                      l2980 0514                        l2972 04FB                        l2966 03B0  
                      l2958 0382                        l2982 0518                        l2974 04FF  
                      l2990 02E4                        l2968 03C1                        l2984 051C  
                      l2976 0506                        l2992 02E9                        l2986 0525  
                      l2978 050D                        l2994 02EC                        l2996 02F2  
                      l2988 02E3                        l2998 02F5                        _ADIF 0066  
                      ?_isr 0070                        _ADGO 00FA                        STR_1 002C  
                      STR_2 0019                        _BRGH 04C2                        _CREN 00C4  
                      u3200 0356                        u3201 0355                        u3140 05E5  
                      u3220 0367                        u3300 0402                        u3141 05E4  
                      u3221 0366                        u3301 0401                        u3310 0390  
                      u3215 0357                        u3311 038F                        u3240 037B  
                      u3400 051C                        u3145 05E1                        u3241 037A  
                      u3225 0363                        u3321 0399                        u3250 03D2  
                      u3322 03A0                        u3410 02E9                        u3235 036F  
                      u3251 03D1                        u3323 03A7                        u3411 02E8  
                      u3180 0343                        u3420 02F2                        u3181 0342  
                      u3421 02F1                        u3270 03E5                        u3350 03C1  
                      u3430 02FB                        u3510 0422                        u3271 03E4  
                      u3351 03C0                        u3335 03A9                        u3431 02FA  
                      u3511 0421                        u3280 03EF                        u3360 04FF  
                      u3440 0304                        u3520 043C                        u3600 0124  
                      u3281 03EE                        u3265 03D7                        u3345 03B1  
                      u3361 04FE                        u3441 0303                        u3505 0578  
                      u3521 043B                        u3601 0123                        u3370 0506  
                      u3450 030D                        u3530 04E0                        u3610 012B  
                      u3195 0348                        u3371 0505                        u3451 030C  
                      u3531 04DF                        u3611 012A                        u3380 050D  
                      u3460 0316                        u3540 04F1                        u3285 03EB  
                      u3381 050C                        u3461 0315                        u3541 04F0  
                      u3605 0120                        u3390 0514                        u3470 031F  
                      u3550 0295                        u3295 03F6                        u3391 0513  
                      u3471 031E                        u3551 0294                        u3480 0328  
                      u3560 02D9                        u3481 0327                        u3561 02D8  
                      u3570 008C                        u3571 008B                        _PEIE 005E  
                      u3590 00CD                        u3495 046A                        u3591 00CE  
                      u3592 00D3                        u3593 00D4                        u3585 00B6  
                      _RCIE 0465                        _RCIF 0065                        _PIR1 000C  
                      _RBPU 040F                        _SPEN 00C7                        _TXIE 0464  
                      _TXEN 04C5                        _SYNC 04C4                 display@addr 005C  
                      _cnt1 003E                        _cnt2 0040                        _cnt3 0042  
                      _main 003D                        _kcnt 0078                        _scan 0051  
                      _sign 0052                        _wmax 0048                        _wmin 004A  
                      btemp 007E                        start 0010                 dispnum@addr 0063  
                     ??_isr 0070                 dispstr@addr 0060                       ?_main 0070  
                     _T1CON 0010          channel_Sel@channel 0057             __end_of___lwdiv 0382  
           __end_of___lwmod 0409                       i1l620 020E                       i1l621 0225  
                     i1l622 022C                       i1l623 0231                       i1l624 0231  
                     i1l625 0251                       i1l626 0274                       i1l627 0267  
                     i1l619 0231                       i1l628 0274                       i1l629 0274  
                     _RCREG 001A                       _TMR1H 000F                       _TMR1L 000E  
                     _SPBRG 0099                       _TRISA 0085                       _TRISB 0086  
                     _TRISC 0087                       _TRISD 0088                       _TRISE 0089  
       ___lmul@multiplicand 0057                       _Temp1 0030                       _Temp2 0034  
                     _Temp3 0038                       _TempZ 004E                       _Rxcnt 0076  
           __end_of_display 0446             __end_of_dispnum 02E0             __end_of_dispstr 04F8  
                     _delay 05D0                       _kflag 03DA             __end_of_initlcd 01F3  
           __end_of_initvar 05D0              __pbitbssCOMMON 03D8         __size_of_LCD_Cursor 0029  
                     pclath 000A        __size_of_channel_Sel 0057                       status 0003  
                     wtemp0 007E    __size_of_send_nibble2lcd 0037                __end_of_main 0142  
              dispnum@stcol 0060                      ??_main 0067            ??_write_lcd_data 0059  
              dispstr@stcol 005E                      ?_delay 0053                      _ADCON0 001F  
                    _ADCON1 009F                      _ADRESH 001E                      _ADRESL 009E  
                    i1l2400 021D                      i1l2410 0235                      i1l2402 0221  
                    i1l2420 0266                      i1l2412 0237                      i1l2404 0225  
                    i1l2422 026B                      i1l2414 024D                      i1l2406 0229  
                    i1l2424 026F                      i1l2416 0251                      i1l2408 0230  
                    i1l2426 0270                      i1l2418 0255                      i1l2390 0204  
                    i1l2392 0208                      i1l2384 01F3                      i1l2394 020C  
                    i1l2386 01F9                      i1l2396 020E                      i1l2388 01FA  
                    i1l2398 0214                      _INTCON 000B                      u260_20 0230  
                    u260_21 022F                      u261_20 0235                      u261_21 0234  
                    u262_25 023C                      u263_20 0255                      u255_20 01F9  
                    u263_21 0254                      u255_21 01F8                      u264_20 0266  
                    u256_20 0208                      u264_21 0265                      u256_21 0207  
                    u265_20 026B                      u257_20 020C                      u265_21 026A  
                    u258_20 021D                      u258_21 021C                      u259_20 0229  
                    _TMR1IE 0460                      _TMR1IF 0060                      _OPTION 0081  
                    _Second 004D                      _RxFlag 03D8            LCD_Cursor@column 005B  
                    ___lmul 0382                      _adcval 003C                   ??___lwdiv 0057  
                 ??___lwmod 0057                      _recBit 03DB                      _inithw 0482  
                    _keyrel 007A                      clrloop 05E7                   ??_display 005B  
                 ??_dispnum 0064                   ??_dispstr 0061           _write_lcd_command 0446  
                 ??_initlcd 005B                   ??_initvar 0053                      saved_w 007E  
        ?_write_lcd_command 0070         ??_write_lcd_command 0059              __pcstackCOMMON 0070  
         ??_send_nibble2lcd 0058               __end_of_delay 05E6                ??_LCD_Cursor 005C  
             dispnum@endcol 0061               LCD_Cursor@row 005D   __end_of_write_lcd_command 0482  
     write_lcd_command@byte 005A                     ??_delay 0055                  __pbssBANK0 0020  
                __pbssBANK1 00A0                  __pbssBANK2 0110                  __pbssBANK3 0190  
        __end_of_LCD_Cursor 05AE               dispstr@endcol 005F                  __pmaintext 003D  
                   ?___lmul 0053                  __pintentry 0004                     ?_inithw 0070  
            ___lmul@product 005C                     _Refresh 004C             __size_of___lmul 0048  
                   _Rxindex 0077                     ___lwdiv 0337                     _adcflag 03D9  
                   ___lwmod 03CA  __size_of_write_lcd_command 003C             __size_of_inithw 003C  
                   _lcd_dat 006B                     _display 0409                     _dispnum 027F  
                   _dispstr 04BE                     _initlcd 0142                __size_of_isr 008C  
                   _initvar 05AE                     _maxsign 004F                     _milisec 0046  
                   _minsign 0050               ??_channel_Sel 0057        end_of_initialization 0557  
        write_lcd_data@byte 005A             _send_nibble2lcd 04F8         __end_of_channel_Sel 0337  
                dispnum@num 005E              __end_of___lmul 03CA              __end_of_inithw 04BE  
       start_initialization 052F                 __end_of_isr 027F     __size_of_write_lcd_data 002A  
                  ??___lmul 005B                    ??_inithw 0053                 __pbssCOMMON 0076  
             __pcstackBANK0 0053     __end_of_send_nibble2lcd 052F                 _channel_Sel 02E0  
                TEMPDEF@str 00A0                   __pnvBANK0 006B            ___lwdiv@dividend 0055  
                 __ptext620 0409                   __ptext621 0142                   __ptext630 05D0  
                 __ptext622 055B                   __ptext631 0482                   __ptext623 0446  
                 __ptext632 01F3                   __ptext624 02E0                   __ptext633 0000  
                 __ptext625 04F8                   __ptext617 027F                   __ptext626 0382  
                 __ptext618 04BE                   __ptext627 03CA                   __ptext619 0585  
                 __ptext628 0337                   __ptext629 05AE                    ?___lwdiv 0053  
                  ?___lwmod 0053                   __pstrings 0013                    ?_display 0070  
                  ?_dispnum 005E                    ?_dispstr 005E                    ?_initlcd 0070  
                  ?_initvar 0070            ___lwdiv@quotient 0059              __size_of_delay 0016  
                 delay@time 0055           interrupt_function 0004                 __stringbase 0018  
                 dispnum@dp 0062            ?_send_nibble2lcd 0057           ___lmul@multiplier 0053  
            _write_lcd_data 055B     send_nibble2lcd@PortData 0058         send_nibble2lcd@flag 0057  
          __size_of___lwdiv 004B            __size_of___lwmod 003F            __size_of_display 003D  
          __size_of_dispnum 0061            __size_of_dispstr 003A            __size_of_initlcd 00B1  
          __size_of_initvar 0022                    _delaycnt 0044             ___lwdiv@divisor 0053  
    __end_of_write_lcd_data 0585             ___lwdiv@counter 0058               __size_of_main 0105  
                  delay@num 0053                    clear_ram 05E6                  _LCD_Cursor 0585  
                  display@k 005D                    dispnum@i 0066                    dispstr@i 0063  
                  dispstr@s 0062           TEMPDEF@DataBuffer 0110             ?_write_lcd_data 0070  
              ?_channel_Sel 0070                    intlevel1 0000            ___lwmod@dividend 0055  
                 stringcode 0013             ___lwmod@divisor 0053             ___lwmod@counter 0058  
                  stringdir 0013                    stringtab 0013  
